Index.PACKAGES = {"kits" : [{"name" : "kits.Applicative", "members_trait" : [{"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]F[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/Applicative.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: F[A], fb: F[B], fc: F[C])(f: (A, B, C) ⇒ D): F[D]", "member" : "kits.Applicative.map3", "link" : "kits\/Applicative.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) ⇒ C): F[C]", "member" : "kits.Applicative.map2", "link" : "kits\/Applicative.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) ⇒ B): F[B]", "member" : "kits.Applicative.map", "link" : "kits\/Applicative.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]F[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/Applicative.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Applicative.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Applicative.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Applicative.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Applicative.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Applicative.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Applicative.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Applicative.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Applicative.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Applicative.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Applicative.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Applicative.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Applicative.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Applicative.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Applicative.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Applicative.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Applicative.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Applicative.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Applicative.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Applicative.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ap", "tail" : "(fa: F[A])(f: F[(A) ⇒ B]): F[B]", "member" : "kits.Applicative.ap", "link" : "kits\/Applicative.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(a: A): F[A]", "member" : "kits.Applicative.pure", "link" : "kits\/Applicative.html#pure[A](a:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kits\/Applicative$.html", "members_object" : [{"label" : "Either", "tail" : "(E: Monoid[E]): Applicative[[A]Either[E, A]]", "member" : "kits.Applicative.Either", "link" : "kits\/Applicative$.html#Either[E](implicitE:kits.Monoid[E]):kits.Applicative[[A]scala.util.Either[E,A]]", "kind" : "implicit def"}, {"label" : "map3", "tail" : "(fa: F[A], fb: F[B], fc: F[C])(f: (A, B, C) ⇒ D)(F: Applicative[F]): F[D]", "member" : "kits.Applicative.map3", "link" : "kits\/Applicative$.html#map3[F[_],A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D)(implicitF:kits.Applicative[F]):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) ⇒ C)(F: Applicative[F]): F[C]", "member" : "kits.Applicative.map2", "link" : "kits\/Applicative$.html#map2[F[_],A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C)(implicitF:kits.Applicative[F]):F[C]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: F[A])(f: F[(A) ⇒ B])(F: Applicative[F]): F[B]", "member" : "kits.Applicative.ap", "link" : "kits\/Applicative$.html#ap[F[_],A,B](fa:F[A])(f:F[A=>B])(implicitF:kits.Applicative[F]):F[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Applicative$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Applicative$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Applicative$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Applicative$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Applicative$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Applicative$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Applicative$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Applicative$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Applicative$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Applicative$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Applicative$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Applicative$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Applicative$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Applicative$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Applicative$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Applicative$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Applicative$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Applicative$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Applicative$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kits\/Applicative.html", "kind" : "trait"}, {"name" : "kits.Functor", "members_trait" : [{"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]F[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/Functor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Functor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Functor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Functor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Functor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Functor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Functor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Functor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Functor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Functor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Functor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Functor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Functor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Functor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Functor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Functor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Functor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Functor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Functor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Functor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) ⇒ B): F[B]", "member" : "kits.Functor.map", "link" : "kits\/Functor.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kits\/Functor$.html", "members_object" : [{"label" : "TailRec", "tail" : ": Monad[TailRec]", "member" : "kits.Functor.TailRec", "link" : "kits\/Functor$.html#TailRec:kits.Monad[util.control.TailCalls.TailRec]", "kind" : "implicit val"}, {"label" : "Future", "tail" : "(ec: ExecutionContext): Monad[Future]", "member" : "kits.Functor.Future", "link" : "kits\/Functor$.html#Future(implicitec:scala.concurrent.ExecutionContext):kits.Monad[scala.concurrent.Future]", "kind" : "implicit def"}, {"label" : "Try", "tail" : ": Monad[Try] with Traverse[Try]", "member" : "kits.Functor.Try", "link" : "kits\/Functor$.html#Try:kits.Monad[scala.util.Try]withkits.Traverse[scala.util.Try]", "kind" : "implicit val"}, {"label" : "Set", "tail" : ": MonadPlus[Set] with Traverse[Set]", "member" : "kits.Functor.Set", "link" : "kits\/Functor$.html#Set:kits.MonadPlus[Set]withkits.Traverse[Set]", "kind" : "implicit val"}, {"label" : "Map", "tail" : "(): Traverse[[A]Map[K, A]]", "member" : "kits.Functor.Map", "link" : "kits\/Functor$.html#Map[K]:kits.Traverse[[A]scala.collection.immutable.Map[K,A]]", "kind" : "implicit def"}, {"label" : "Either", "tail" : "(): Traverse[[A]Either[E, A]]", "member" : "kits.Functor.Either", "link" : "kits\/Functor$.html#Either[E]:kits.Traverse[[A]scala.util.Either[E,A]]", "kind" : "implicit def"}, {"label" : "Stream", "tail" : ": MonadPlus[Stream] with Traverse[Stream]", "member" : "kits.Functor.Stream", "link" : "kits\/Functor$.html#Stream:kits.MonadPlus[Stream]withkits.Traverse[Stream]", "kind" : "implicit val"}, {"label" : "IndexedSeq", "tail" : ": MonadPlus[IndexedSeq] with Traverse[IndexedSeq]", "member" : "kits.Functor.IndexedSeq", "link" : "kits\/Functor$.html#IndexedSeq:kits.MonadPlus[scala.collection.immutable.IndexedSeq]withkits.Traverse[scala.collection.immutable.IndexedSeq]", "kind" : "implicit val"}, {"label" : "Vector", "tail" : ": MonadPlus[Vector] with Traverse[Vector]", "member" : "kits.Functor.Vector", "link" : "kits\/Functor$.html#Vector:kits.MonadPlus[Vector]withkits.Traverse[Vector]", "kind" : "implicit val"}, {"label" : "List", "tail" : ": MonadPlus[List] with Traverse[List]", "member" : "kits.Functor.List", "link" : "kits\/Functor$.html#List:kits.MonadPlus[List]withkits.Traverse[List]", "kind" : "implicit val"}, {"label" : "Option", "tail" : ": MonadPlus[Option] with Traverse[Option]", "member" : "kits.Functor.Option", "link" : "kits\/Functor$.html#Option:kits.MonadPlus[Option]withkits.Traverse[Option]", "kind" : "implicit val"}, {"label" : "Function0", "tail" : ": Monad[Function0] with Traverse[Function0]", "member" : "kits.Functor.Function0", "link" : "kits\/Functor$.html#Function0:kits.Monad[Function0]withkits.Traverse[Function0]", "kind" : "implicit val"}, {"label" : "Identity", "tail" : ": Monad[Identity] with Traverse[Identity]", "member" : "kits.Functor.Identity", "link" : "kits\/Functor$.html#Identity:kits.Monad[kits.Identity]withkits.Traverse[kits.Identity]", "kind" : "implicit val"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) ⇒ B)(F: Functor[F]): F[B]", "member" : "kits.Functor.map", "link" : "kits\/Functor$.html#map[F[_],A,B](fa:F[A])(f:A=>B)(implicitF:kits.Functor[F]):F[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Functor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Functor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Functor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Functor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Functor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Functor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Functor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Functor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Functor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Functor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Functor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Functor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Functor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Functor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Functor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Functor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Functor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Functor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Functor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kits\/Functor.html", "kind" : "trait"}, {"name" : "kits.Monad", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "kits.Monad.flatten", "link" : "kits\/Monad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: F[A])(f: F[(A) ⇒ B]): F[B]", "member" : "kits.Monad.ap", "link" : "kits\/Monad.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) ⇒ B): F[B]", "member" : "kits.Monad.map", "link" : "kits\/Monad.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]F[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/Monad.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: F[A], fb: F[B], fc: F[C])(f: (A, B, C) ⇒ D): F[D]", "member" : "kits.Applicative.map3", "link" : "kits\/Monad.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) ⇒ C): F[C]", "member" : "kits.Applicative.map2", "link" : "kits\/Monad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]F[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/Monad.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Monad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Monad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Monad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Monad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Monad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Monad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Monad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Monad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Monad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Monad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Monad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Monad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Monad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Monad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Monad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Monad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) ⇒ F[B]): F[B]", "member" : "kits.Monad.flatMap", "link" : "kits\/Monad.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(a: A): F[A]", "member" : "kits.Applicative.pure", "link" : "kits\/Monad.html#pure[A](a:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kits\/Monad$.html", "members_object" : [{"label" : "Either", "tail" : "(): Monad[[A]Either[E, A]]", "member" : "kits.Monad.Either", "link" : "kits\/Monad$.html#Either[E]:kits.Monad[[A]scala.util.Either[E,A]]", "kind" : "implicit def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]])(F: Monad[F]): F[A]", "member" : "kits.Monad.flatten", "link" : "kits\/Monad$.html#flatten[F[_],A](ffa:F[F[A]])(implicitF:kits.Monad[F]):F[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) ⇒ F[B])(F: Monad[F]): F[B]", "member" : "kits.Monad.flatMap", "link" : "kits\/Monad$.html#flatMap[F[_],A,B](fa:F[A])(f:A=>F[B])(implicitF:kits.Monad[F]):F[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Monad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Monad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Monad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Monad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Monad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Monad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Monad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Monad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Monad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Monad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Monad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Monad$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Monad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Monad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Monad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Monad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kits\/Monad.html", "kind" : "trait"}, {"name" : "kits.MonadPlus", "members_trait" : [{"label" : "monoid", "tail" : "(): Monoid[F[A]]", "member" : "kits.MonadPlus.monoid", "link" : "kits\/MonadPlus.html#monoid[A]:kits.Monoid[F[A]]", "kind" : "def"}, {"label" : "filter", "tail" : "(fa: F[A])(p: (A) ⇒ Boolean): F[A]", "member" : "kits.MonadPlus.filter", "link" : "kits\/MonadPlus.html#filter[A](fa:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "kits.Monad.flatten", "link" : "kits\/MonadPlus.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: F[A])(f: F[(A) ⇒ B]): F[B]", "member" : "kits.Monad.ap", "link" : "kits\/MonadPlus.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) ⇒ B): F[B]", "member" : "kits.Monad.map", "link" : "kits\/MonadPlus.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]F[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/MonadPlus.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: F[A], fb: F[B], fc: F[C])(f: (A, B, C) ⇒ D): F[D]", "member" : "kits.Applicative.map3", "link" : "kits\/MonadPlus.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) ⇒ C): F[C]", "member" : "kits.Applicative.map2", "link" : "kits\/MonadPlus.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]F[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/MonadPlus.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/MonadPlus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/MonadPlus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/MonadPlus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/MonadPlus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/MonadPlus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/MonadPlus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/MonadPlus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/MonadPlus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/MonadPlus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/MonadPlus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/MonadPlus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/MonadPlus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/MonadPlus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/MonadPlus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/MonadPlus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/MonadPlus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/MonadPlus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/MonadPlus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/MonadPlus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "plus", "tail" : "(x: F[A], y: F[A]): F[A]", "member" : "kits.MonadPlus.plus", "link" : "kits\/MonadPlus.html#plus[A](x:F[A],y:F[A]):F[A]", "kind" : "abstract def"}, {"label" : "zero", "tail" : "(): F[A]", "member" : "kits.MonadPlus.zero", "link" : "kits\/MonadPlus.html#zero[A]:F[A]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) ⇒ F[B]): F[B]", "member" : "kits.Monad.flatMap", "link" : "kits\/MonadPlus.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(a: A): F[A]", "member" : "kits.Applicative.pure", "link" : "kits\/MonadPlus.html#pure[A](a:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kits\/MonadPlus$.html", "members_object" : [{"label" : "filter", "tail" : "(fa: F[A])(p: (A) ⇒ Boolean)(F: MonadPlus[F]): F[A]", "member" : "kits.MonadPlus.filter", "link" : "kits\/MonadPlus$.html#filter[F[_],A](fa:F[A])(p:A=>Boolean)(implicitF:kits.MonadPlus[F]):F[A]", "kind" : "def"}, {"label" : "plus", "tail" : "(x: F[A], y: F[A])(F: MonadPlus[F]): F[A]", "member" : "kits.MonadPlus.plus", "link" : "kits\/MonadPlus$.html#plus[F[_],A](x:F[A],y:F[A])(implicitF:kits.MonadPlus[F]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/MonadPlus$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/MonadPlus$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/MonadPlus$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/MonadPlus$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/MonadPlus$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/MonadPlus$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/MonadPlus$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/MonadPlus$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/MonadPlus$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/MonadPlus$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/MonadPlus$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/MonadPlus$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/MonadPlus$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/MonadPlus$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/MonadPlus$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/MonadPlus$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/MonadPlus$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/MonadPlus$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/MonadPlus$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kits\/MonadPlus.html", "kind" : "trait"}, {"name" : "kits.Monoid", "members_trait" : [{"label" : "applicative", "tail" : "(): Applicative[[B]A]", "member" : "kits.Monoid.applicative", "link" : "kits\/Monoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Monoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Monoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Monoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Monoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Monoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Monoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Monoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Monoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Monoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Monoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Monoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Monoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Monoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Monoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Monoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Monoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "append", "tail" : "(x: A, y: A): A", "member" : "kits.Monoid.append", "link" : "kits\/Monoid.html#append(x:A,y:A):A", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): A", "member" : "kits.Monoid.empty", "link" : "kits\/Monoid.html#empty:A", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kits\/Monoid$.html", "members_object" : [{"label" : "Set", "tail" : "(): Monoid[Set[A]]", "member" : "kits.Monoid.Set", "link" : "kits\/Monoid$.html#Set[A]:kits.Monoid[Set[A]]", "kind" : "implicit def"}, {"label" : "Stream", "tail" : "(): Monoid[Stream[A]]", "member" : "kits.Monoid.Stream", "link" : "kits\/Monoid$.html#Stream[A]:kits.Monoid[Stream[A]]", "kind" : "implicit def"}, {"label" : "IndexedSeq", "tail" : "(): Monoid[IndexedSeq[A]]", "member" : "kits.Monoid.IndexedSeq", "link" : "kits\/Monoid$.html#IndexedSeq[A]:kits.Monoid[scala.collection.immutable.IndexedSeq[A]]", "kind" : "implicit def"}, {"label" : "Vector", "tail" : "(): Monoid[Vector[A]]", "member" : "kits.Monoid.Vector", "link" : "kits\/Monoid$.html#Vector[A]:kits.Monoid[Vector[A]]", "kind" : "implicit def"}, {"label" : "List", "tail" : "(): Monoid[List[A]]", "member" : "kits.Monoid.List", "link" : "kits\/Monoid$.html#List[A]:kits.Monoid[List[A]]", "kind" : "implicit def"}, {"label" : "Ordering", "tail" : "(): Monoid[Ordering[A]]", "member" : "kits.Monoid.Ordering", "link" : "kits\/Monoid$.html#Ordering[A]:kits.Monoid[Ordering[A]]", "kind" : "implicit def"}, {"label" : "Map", "tail" : "(V: Monoid[V]): Monoid[Map[K, V]]", "member" : "kits.Monoid.Map", "link" : "kits\/Monoid$.html#Map[K,V](implicitV:kits.Monoid[V]):kits.Monoid[Map[K,V]]", "kind" : "implicit def"}, {"label" : "Option", "tail" : "(A: Monoid[A]): Monoid[Option[A]]", "member" : "kits.Monoid.Option", "link" : "kits\/Monoid$.html#Option[A](implicitA:kits.Monoid[A]):kits.Monoid[Option[A]]", "kind" : "implicit def"}, {"label" : "Tuple3", "tail" : "(A: Monoid[A], B: Monoid[B], C: Monoid[C]): Monoid[(A, B, C)]", "member" : "kits.Monoid.Tuple3", "link" : "kits\/Monoid$.html#Tuple3[A,B,C](implicitA:kits.Monoid[A],implicitB:kits.Monoid[B],implicitC:kits.Monoid[C]):kits.Monoid[(A,B,C)]", "kind" : "implicit def"}, {"label" : "Tuple2", "tail" : "(A: Monoid[A], B: Monoid[B]): Monoid[(A, B)]", "member" : "kits.Monoid.Tuple2", "link" : "kits\/Monoid$.html#Tuple2[A,B](implicitA:kits.Monoid[A],implicitB:kits.Monoid[B]):kits.Monoid[(A,B)]", "kind" : "implicit def"}, {"label" : "Function0", "tail" : "(A: Monoid[A]): Monoid[() ⇒ A]", "member" : "kits.Monoid.Function0", "link" : "kits\/Monoid$.html#Function0[A](implicitA:kits.Monoid[A]):kits.Monoid[()=>A]", "kind" : "implicit def"}, {"label" : "Prod", "tail" : "(A: Numeric[A]): Monoid[A]", "member" : "kits.Monoid.Prod", "link" : "kits\/Monoid$.html#Prod[A](implicitA:Numeric[A]):kits.Monoid[A]", "kind" : "def"}, {"label" : "Sum", "tail" : "(A: Numeric[A]): Monoid[A]", "member" : "kits.Monoid.Sum", "link" : "kits\/Monoid$.html#Sum[A](implicitA:Numeric[A]):kits.Monoid[A]", "kind" : "def"}, {"label" : "Disj", "tail" : ": Monoid[Boolean]", "member" : "kits.Monoid.Disj", "link" : "kits\/Monoid$.html#Disj:kits.Monoid[Boolean]", "kind" : "val"}, {"label" : "Conj", "tail" : ": Monoid[Boolean]", "member" : "kits.Monoid.Conj", "link" : "kits\/Monoid$.html#Conj:kits.Monoid[Boolean]", "kind" : "val"}, {"label" : "Unit", "tail" : ": Monoid[Unit]", "member" : "kits.Monoid.Unit", "link" : "kits\/Monoid$.html#Unit:kits.Monoid[Unit]", "kind" : "implicit val"}, {"label" : "String", "tail" : ": Monoid[String]", "member" : "kits.Monoid.String", "link" : "kits\/Monoid$.html#String:kits.Monoid[String]", "kind" : "implicit val"}, {"label" : "append", "tail" : "(x: A, y: A)(A: Monoid[A]): A", "member" : "kits.Monoid.append", "link" : "kits\/Monoid$.html#append[A](x:A,y:A)(implicitA:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Monoid$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Monoid$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Monoid$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Monoid$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Monoid$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Monoid$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Monoid$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monoid$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monoid$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Monoid$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Monoid$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Monoid$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Monoid$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Monoid$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Monoid$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Monoid$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Monoid$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Monoid$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Monoid$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kits\/Monoid.html", "kind" : "trait"}, {"name" : "kits.Traverse", "members_trait" : [{"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]F[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/Traverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: F[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/Traverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: F[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/Traverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: F[G[A]])(arg0: Applicative[G]): G[F[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/Traverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) ⇒ B): F[B]", "member" : "kits.Traverse.map", "link" : "kits\/Traverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]F[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/Traverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Traverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Traverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Traverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Traverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Traverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Traverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Traverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Traverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Traverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Traverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Traverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Traverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Traverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Traverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Traverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Traverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Traverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Traverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Traverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(fa: F[A])(f: (A) ⇒ G[B])(arg0: Applicative[G]): G[F[B]]", "member" : "kits.Traverse.traverse", "link" : "kits\/Traverse.html#traverse[G[_],A,B](fa:F[A])(f:A=>G[B])(implicitevidence$1:kits.Applicative[G]):G[F[B]]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kits\/Traverse$.html", "members_object" : [{"label" : "fold", "tail" : "(fa: F[A])(arg0: Monoid[A], F: Traverse[F]): A", "member" : "kits.Traverse.fold", "link" : "kits\/Traverse$.html#fold[F[_],A](fa:F[A])(implicitevidence$8:kits.Monoid[A],implicitF:kits.Traverse[F]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: F[A])(f: (A) ⇒ B)(arg0: Monoid[B], F: Traverse[F]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/Traverse$.html#foldMap[F[_],A,B](fa:F[A])(f:A=>B)(implicitevidence$7:kits.Monoid[B],implicitF:kits.Traverse[F]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: F[G[A]])(arg0: Applicative[G], F: Traverse[F]): G[F[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/Traverse$.html#sequence[F[_],G[_],A](fga:F[G[A]])(implicitevidence$6:kits.Applicative[G],implicitF:kits.Traverse[F]):G[F[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(fa: F[A])(f: (A) ⇒ G[B])(arg0: Applicative[G], F: Traverse[F]): G[F[B]]", "member" : "kits.Traverse.traverse", "link" : "kits\/Traverse$.html#traverse[F[_],G[_],A,B](fa:F[A])(f:A=>G[B])(implicitevidence$5:kits.Applicative[G],implicitF:kits.Traverse[F]):G[F[B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/Traverse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/Traverse$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/Traverse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/Traverse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/Traverse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/Traverse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/Traverse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Traverse$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Traverse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/Traverse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/Traverse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/Traverse$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/Traverse$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/Traverse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/Traverse$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/Traverse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/Traverse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/Traverse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/Traverse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kits\/Traverse.html", "kind" : "trait"}], "kits.free" : [{"name" : "kits.free.:+:", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/$colon$plus$colon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/$colon$plus$colon.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/$colon$plus$colon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/$colon$plus$colon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/$colon$plus$colon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/$colon$plus$colon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/$colon$plus$colon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/$colon$plus$colon.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/$colon$plus$colon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/$colon$plus$colon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/$colon$plus$colon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/$colon$plus$colon.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/$colon$plus$colon.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/$colon$plus$colon.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/$colon$plus$colon.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/$colon$plus$colon.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/$colon$plus$colon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/$colon$plus$colon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/$colon$plus$colon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/$colon$plus$colon.html", "kind" : "class"}, {"name" : "kits.free.Arrows", "shortDescription" : "", "object" : "kits\/free\/Arrows$.html", "members_class" : [{"label" : "view", "tail" : "(): View[U, A, B]", "member" : "kits.free.Arrows.view", "link" : "kits\/free\/Arrows.html#view:kits.free.Arrows.View[U,A,B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: Arrows[U, B, C]): Arrows[U, A, C]", "member" : "kits.free.Arrows.++", "link" : "kits\/free\/Arrows.html#++[C](that:kits.free.Arrows[U,B,C]):kits.free.Arrows[U,A,C]", "kind" : "final def"}, {"label" : "+:", "tail" : "(f: (C) ⇒ Free[U, A]): Arrows[U, C, B]", "member" : "kits.free.Arrows.+:", "link" : "kits\/free\/Arrows.html#+:[C](f:C=>kits.free.Free[U,A]):kits.free.Arrows[U,C,B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(f: (B) ⇒ Free[U, C]): Arrows[U, A, C]", "member" : "kits.free.Arrows.:+", "link" : "kits\/free\/Arrows.html#:+[C](f:B=>kits.free.Free[U,C]):kits.free.Arrows[U,A,C]", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A): Free[U, B]", "member" : "kits.free.Arrows.apply", "link" : "kits\/free\/Arrows.html#apply(a:A):kits.free.Free[U,B]", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "kits\/free\/Arrows.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Free[U, B]) ⇒ A): (A) ⇒ A", "member" : "scala.Function1.andThen", "link" : "kits\/free\/Arrows.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ A): (A) ⇒ Free[U, B]", "member" : "scala.Function1.compose", "link" : "kits\/free\/Arrows.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Arrows.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Arrows.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Arrows.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Arrows.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Arrows.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Arrows.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Arrows.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Arrows.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Arrows.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Arrows.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Arrows.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Arrows.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Arrows.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Arrows.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Arrows.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Arrows.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Arrows.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Arrows.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Cons", "tail" : "", "member" : "kits.free.Arrows.Cons", "link" : "kits\/free\/Arrows$.html#Cons[U,A,B,C]extendsArrows.View[U,A,C]withProductwithSerializable", "kind" : "case class"}, {"label" : "One", "tail" : "", "member" : "kits.free.Arrows.One", "link" : "kits\/free\/Arrows$.html#One[U,A,B]extendsArrows.View[U,A,B]withProductwithSerializable", "kind" : "case class"}, {"label" : "View", "tail" : "", "member" : "kits.free.Arrows.View", "link" : "kits\/free\/Arrows$.html#View[U,-A,+B]extendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "Node", "tail" : "", "member" : "kits.free.Arrows.Node", "link" : "kits\/free\/Arrows$.html#Node[U,A,B,C]extendsArrows[U,A,C]withProductwithSerializable", "kind" : "case class"}, {"label" : "Leaf", "tail" : "", "member" : "kits.free.Arrows.Leaf", "link" : "kits\/free\/Arrows$.html#Leaf[U,A,B]extendsArrows[U,A,B]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Arrows$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Arrows$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Arrows$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Arrows$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Arrows$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Arrows$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Arrows$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Arrows$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Arrows$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Arrows$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Arrows$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Arrows$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Arrows$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Arrows$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Arrows$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Arrows$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Arrows$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Arrows$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Arrows$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Arrows.html", "kind" : "class"}, {"name" : "kits.free.Choice", "shortDescription" : "", "object" : "kits\/free\/Choice$.html", "members_class" : [{"label" : "Member", "tail" : "", "member" : "kits.free.Choice.Member", "link" : "kits\/free\/Choice.html#Member[U]=kits.free.Member[kits.free.Choice,U]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Choice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Choice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Choice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Choice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Choice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Choice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Choice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Choice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Choice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Choice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Choice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Choice.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Choice.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Choice.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Choice.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Choice.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Choice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Choice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Choice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "eval", "tail" : "(M: MonadPlus[M]): Eval { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Choice.eval", "link" : "kits\/free\/Choice$.html#eval[M[_]](implicitM:kits.MonadPlus[M]):kits.free.Eval{typeSucc[U]=kits.free.Choice:+:U;typeResult[A]=M[A]}", "kind" : "def"}, {"label" : "fromSeq", "tail" : "(seq: Seq[A])(arg0: Member[Choice, U]): Free[U, A]", "member" : "kits.free.Choice.fromSeq", "link" : "kits\/free\/Choice$.html#fromSeq[U,A](seq:Seq[A])(implicitevidence$4:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "once", "tail" : "(free: Free[U, A])(arg0: Member[Choice, U]): Free[U, A]", "member" : "kits.free.Choice.once", "link" : "kits\/free\/Choice$.html#once[U,A,B](free:kits.free.Free[U,A])(implicitevidence$3:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "ifte", "tail" : "(t: Free[U, A])(th: (A) ⇒ Free[U, B])(el: Free[U, B])(arg0: Member[Choice, U]): Free[U, B]", "member" : "kits.free.Choice.ifte", "link" : "kits\/free\/Choice$.html#ifte[U,A,B](t:kits.free.Free[U,A])(th:A=>kits.free.Free[U,B])(el:kits.free.Free[U,B])(implicitevidence$2:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,B]", "kind" : "def"}, {"label" : "split", "tail" : "(free: Free[U, A])(arg0: Member[Choice, U]): Free[U, Option[(A, Free[U, A])]]", "member" : "kits.free.Choice.split", "link" : "kits\/free\/Choice$.html#split[U,A](free:kits.free.Free[U,A])(implicitevidence$1:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,Option[(A,kits.free.Free[U,A])]]", "kind" : "def"}, {"label" : "plus", "tail" : "(x: Free[U, A], y: Free[U, A])(F: Member[Choice, U]): Free[U, A]", "member" : "kits.free.Choice.plus", "link" : "kits\/free\/Choice$.html#plus[U,A](x:kits.free.Free[U,A],y:kits.free.Free[U,A])(implicitF:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "zero", "tail" : "(F: Member[Choice, U]): Free[U, A]", "member" : "kits.free.Choice.zero", "link" : "kits\/free\/Choice$.html#zero[U,A](implicitF:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "run", "tail" : "(free: Free[:+:[Choice, U], A])(M: MonadPlus[M]): Free[U, M[A]]", "member" : "kits.free.Choice.run", "link" : "kits\/free\/Choice$.html#run[U,M[_],A](free:kits.free.Free[kits.free.Choice:+:U,A])(implicitM:kits.MonadPlus[M]):kits.free.Free[U,M[A]]", "kind" : "def"}, {"label" : "Plus", "tail" : "", "member" : "kits.free.Choice.Plus", "link" : "kits\/free\/Choice$.html#Plus", "kind" : "object"}, {"label" : "Zero", "tail" : "", "member" : "kits.free.Choice.Zero", "link" : "kits\/free\/Choice$.html#Zero", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Choice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Choice$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Choice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Choice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Choice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Choice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Choice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Choice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Choice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Choice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Choice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Choice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Choice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Choice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Choice$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Choice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Choice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Choice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Choice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Choice.html", "kind" : "class"}, {"name" : "kits.free.Error", "shortDescription" : "", "object" : "kits\/free\/Error$.html", "members_class" : [{"label" : "Member", "tail" : "", "member" : "kits.free.Error.Member", "link" : "kits\/free\/Error.html#Member[U]=kits.free.Member[kits.free.Error[E],U]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Error.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Error.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Error.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Error.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Error.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Error.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Error.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Error.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Error.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Error.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Error.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Error.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Error.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Error.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Error.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Error.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Error.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Error.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Error.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "eval", "tail" : "(): Eval { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Error.eval", "link" : "kits\/free\/Error$.html#eval[E]:kits.free.Eval{typeSucc[U]=kits.free.Error[E]:+:U;typeResult[A]=Either[E,A]}", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(arg0: Member[Error[Throwable], U]): Free[U, A]", "member" : "kits.free.Error.fromTry", "link" : "kits\/free\/Error$.html#fromTry[U,A](t:scala.util.Try[A])(implicitevidence$4:kits.free.Member[kits.free.Error[Throwable],U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(either: Either[E, A])(arg0: Member[Error[E], U]): Free[U, A]", "member" : "kits.free.Error.fromEither", "link" : "kits\/free\/Error$.html#fromEither[U,E,A](either:Either[E,A])(implicitevidence$3:kits.free.Member[kits.free.Error[E],U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(option: Option[A])(arg0: Member[Error[Unit], U]): Free[U, A]", "member" : "kits.free.Error.fromOption", "link" : "kits\/free\/Error$.html#fromOption[U,A](option:Option[A])(implicitevidence$2:kits.free.Member[kits.free.Error[Unit],U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "recover", "tail" : "(free: Free[U, A])(handle: (E) ⇒ Free[U, A])(arg0: Member[Error[E], U]): Free[U, A]", "member" : "kits.free.Error.recover", "link" : "kits\/free\/Error$.html#recover[U,E,A](free:kits.free.Free[U,A])(handle:E=>kits.free.Free[U,A])(implicitevidence$1:kits.free.Member[kits.free.Error[E],U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "fail", "tail" : "(value: E)(F: Member[Error[E], U]): Free[U, A]", "member" : "kits.free.Error.fail", "link" : "kits\/free\/Error$.html#fail[U,E,A](value:E)(implicitF:kits.free.Member[kits.free.Error[E],U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "run", "tail" : "(free: Free[:+:[Error[E], U], A]): Free[U, Either[E, A]]", "member" : "kits.free.Error.run", "link" : "kits\/free\/Error$.html#run[U,E,A](free:kits.free.Free[kits.free.Error[E]:+:U,A]):kits.free.Free[U,Either[E,A]]", "kind" : "def"}, {"label" : "Fail", "tail" : "", "member" : "kits.free.Error.Fail", "link" : "kits\/free\/Error$.html#Fail[E]extendsError[E]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Error$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Error$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Error$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Error$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Error$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Error$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Error$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Error$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Error$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Error$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Error$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Error$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Error$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Error$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Error$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Error$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Error$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Error$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Error$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Error.html", "kind" : "class"}, {"name" : "kits.free.Eval", "members_trait" : [{"label" : "andThen", "tail" : "(that: Exec): Exec { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Eval.andThen", "link" : "kits\/free\/Eval.html#andThen(that:kits.free.Exec):kits.free.Exec{typeSucc[U]=Eval.this.Succ[that.Succ[U]];typeResult[A]=that.Result[Eval.this.Result[A]]}", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Eval): Eval { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Eval.andThen", "link" : "kits\/free\/Eval.html#andThen(that:kits.free.Eval):kits.free.Eval{typeSucc[U]=Eval.this.Succ[that.Succ[U]];typeResult[A]=that.Result[Eval.this.Result[A]]}", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Eval): Eval { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Eval.compose", "link" : "kits\/free\/Eval.html#compose(that:kits.free.Eval):kits.free.Eval{typeSucc[U]=that.Succ[Eval.this.Succ[U]];typeResult[A]=Eval.this.Result[that.Result[A]]}", "kind" : "final def"}, {"label" : "apply", "tail" : "(free: Free[Succ[Void], A]): Result[A]", "member" : "kits.free.Eval.apply", "link" : "kits\/free\/Eval.html#apply[A](free:kits.free.Free[Eval.this.Succ[kits.free.Void],A]):Eval.this.Result[A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Eval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Eval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Eval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Eval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Eval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Eval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Eval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Eval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Eval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Eval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Eval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Eval.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Eval.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Eval.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Eval.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Eval.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Eval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Eval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Eval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "eval", "tail" : "(free: Free[Succ[U], A]): Free[U, Result[A]]", "member" : "kits.free.Eval.eval", "link" : "kits\/free\/Eval.html#eval[U,A](free:kits.free.Free[Eval.this.Succ[U],A]):kits.free.Free[U,Eval.this.Result[A]]", "kind" : "abstract def"}, {"member" : "kits.free.Eval.Result", "error" : "unsupported entity"}, {"member" : "kits.free.Eval.Succ", "error" : "unsupported entity"}], "shortDescription" : "", "trait" : "kits\/free\/Eval.html", "kind" : "trait"}, {"name" : "kits.free.Exec", "members_trait" : [{"label" : "compose", "tail" : "(that: Eval): Exec { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Exec.compose", "link" : "kits\/free\/Exec.html#compose(that:kits.free.Eval):kits.free.Exec{typeSucc[U]=that.Succ[Exec.this.Succ[U]];typeResult[A]=Exec.this.Result[that.Result[A]]}", "kind" : "final def"}, {"label" : "apply", "tail" : "(free: Free[Succ[Void], A]): Result[A]", "member" : "kits.free.Exec.apply", "link" : "kits\/free\/Exec.html#apply[A](free:kits.free.Free[Exec.this.Succ[kits.free.Void],A]):Exec.this.Result[A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Exec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Exec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Exec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Exec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Exec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Exec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Exec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Exec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Exec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Exec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Exec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Exec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Exec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Exec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Exec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Exec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Exec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Exec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Exec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "exec", "tail" : "(free: Free[Succ[Void], A]): Result[A]", "member" : "kits.free.Exec.exec", "link" : "kits\/free\/Exec.html#exec[A](free:kits.free.Free[Exec.this.Succ[kits.free.Void],A]):Exec.this.Result[A]", "kind" : "abstract def"}, {"member" : "kits.free.Exec.Result", "error" : "unsupported entity"}, {"member" : "kits.free.Exec.Succ", "error" : "unsupported entity"}], "shortDescription" : "", "trait" : "kits\/free\/Exec.html", "kind" : "trait"}, {"name" : "kits.free.Free", "shortDescription" : "", "object" : "kits\/free\/Free$.html", "members_class" : [{"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(F: Member[Choice, U]): Free[U, A]", "member" : "kits.free.Free.withFilter", "link" : "kits\/free\/Free.html#withFilter(p:A=>Boolean)(implicitF:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Free.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Free.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Free.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Free.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Free.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Free.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Free.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Free.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Free.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Free.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Free.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Free.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Free.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Free.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Free.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Free.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Free.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Free.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Free.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Free[U, B]): Free[U, B]", "member" : "kits.free.Free.flatMap", "link" : "kits\/free\/Free.html#flatMap[B](f:A=>kits.free.Free[U,B]):kits.free.Free[U,B]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Free[U, B]", "member" : "kits.free.Free.map", "link" : "kits\/free\/Free.html#map[B](f:A=>B):kits.free.Free[U,B]", "kind" : "abstract def"}], "members_object" : [{"label" : "exec", "tail" : ": Exec { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Free.exec", "link" : "kits\/free\/Free$.html#exec:kits.free.Exec{typeSucc[U]=U;typeResult[A]=A}", "kind" : "val"}, {"label" : "Monoid", "tail" : "(arg0: Member[Choice, U]): Monoid[Free[U, A]]", "member" : "kits.free.Free.Monoid", "link" : "kits\/free\/Free$.html#Monoid[U,A](implicitevidence$2:kits.free.Member[kits.free.Choice,U]):kits.Monoid[kits.free.Free[U,A]]", "kind" : "implicit def"}, {"label" : "MonadPlus", "tail" : "(arg0: Member[Choice, U]): MonadPlus[[A]Free[U, A]]", "member" : "kits.free.Free.MonadPlus", "link" : "kits\/free\/Free$.html#MonadPlus[U](implicitevidence$1:kits.free.Member[kits.free.Choice,U]):kits.MonadPlus[[A]kits.free.Free[U,A]]", "kind" : "implicit def"}, {"label" : "Monad", "tail" : "(): Monad[[A]Free[U, A]]", "member" : "kits.free.Free.Monad", "link" : "kits\/free\/Free$.html#Monad[U]:kits.Monad[[A]kits.free.Free[U,A]]", "kind" : "implicit def"}, {"label" : "interpose", "tail" : "(free: Free[U, A])(f: (A) ⇒ B)(g: (F) ⇒ ((Any) ⇒ Free[U, A]) ⇒ Either[Free[U, A], Free[U, B]])(F: Member[F, U]): Free[U, B]", "member" : "kits.free.Free.interpose", "link" : "kits\/free\/Free$.html#interpose[F,U,A,B](free:kits.free.Free[U,A])(f:A=>B)(g:F=>((Any=>kits.free.Free[U,A])=>Either[kits.free.Free[U,A],kits.free.Free[U,B]]))(implicitF:kits.free.Member[F,U]):kits.free.Free[U,B]", "kind" : "def"}, {"label" : "interpose", "tail" : "(free: Free[U, A], state: S)(f: (A, S) ⇒ Either[(Free[U, A], S), B])(g: (F, S) ⇒ ((Any) ⇒ Free[U, A]) ⇒ Either[(Free[U, A], S), Free[U, B]])(F: Member[F, U]): Free[U, B]", "member" : "kits.free.Free.interpose", "link" : "kits\/free\/Free$.html#interpose[F,U,A,B,S](free:kits.free.Free[U,A],state:S)(f:(A,S)=>Either[(kits.free.Free[U,A],S),B])(g:(F,S)=>(Any=>kits.free.Free[U,A])=>Either[(kits.free.Free[U,A],S),kits.free.Free[U,B]])(implicitF:kits.free.Member[F,U]):kits.free.Free[U,B]", "kind" : "def"}, {"label" : "handleRelay", "tail" : "(free: Free[:+:[F, U], A])(f: (A) ⇒ B)(g: (F) ⇒ ((Any) ⇒ Free[:+:[F, U], A]) ⇒ Either[Free[:+:[F, U], A], Free[U, B]]): Free[U, B]", "member" : "kits.free.Free.handleRelay", "link" : "kits\/free\/Free$.html#handleRelay[F,U,A,B](free:kits.free.Free[F:+:U,A])(f:A=>B)(g:F=>((Any=>kits.free.Free[F:+:U,A])=>Either[kits.free.Free[F:+:U,A],kits.free.Free[U,B]])):kits.free.Free[U,B]", "kind" : "def"}, {"label" : "handleRelay", "tail" : "(free: Free[:+:[F, U], A], state: S)(f: (A, S) ⇒ Either[(Free[:+:[F, U], A], S), B])(g: (F, S) ⇒ ((Any) ⇒ Free[:+:[F, U], A]) ⇒ Either[(Free[:+:[F, U], A], S), Free[U, B]]): Free[U, B]", "member" : "kits.free.Free.handleRelay", "link" : "kits\/free\/Free$.html#handleRelay[F,U,A,B,S](free:kits.free.Free[F:+:U,A],state:S)(f:(A,S)=>Either[(kits.free.Free[F:+:U,A],S),B])(g:(F,S)=>(Any=>kits.free.Free[F:+:U,A])=>Either[(kits.free.Free[F:+:U,A],S),kits.free.Free[U,B]]):kits.free.Free[U,B]", "kind" : "def"}, {"label" : "run", "tail" : "(free: Free[Void, A]): A", "member" : "kits.free.Free.run", "link" : "kits\/free\/Free$.html#run[A](free:kits.free.Free[kits.free.Void,A]):A", "kind" : "def"}, {"label" : "apply", "tail" : "(union: U): Free[U, A]", "member" : "kits.free.Free.apply", "link" : "kits\/free\/Free$.html#apply[U,A](union:U):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Free$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Free$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Free$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Free$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Free$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Free$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Free$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Free$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Free$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Free$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Free$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Free$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Free$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Free$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Free$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Free$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Free$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Free$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Free$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Free.html", "kind" : "class"}, {"name" : "kits.free.Impure", "shortDescription" : "", "members_case class" : [{"label" : "flatMap", "tail" : "(f: (B) ⇒ Free[U, C]): Free[U, C]", "member" : "kits.free.Impure.flatMap", "link" : "kits\/free\/Impure.html#flatMap[C](f:B=>kits.free.Free[U,C]):kits.free.Free[U,C]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (B) ⇒ C): Free[U, C]", "member" : "kits.free.Impure.map", "link" : "kits\/free\/Impure.html#map[C](f:B=>C):kits.free.Free[U,C]", "kind" : "def"}, {"member" : "kits.free.Impure#<init>", "error" : "unsupported entity"}, {"label" : "arrows", "tail" : ": Arrows[U, A, B]", "member" : "kits.free.Impure.arrows", "link" : "kits\/free\/Impure.html#arrows:kits.free.Arrows[U,A,B]", "kind" : "val"}, {"label" : "union", "tail" : ": U", "member" : "kits.free.Impure.union", "link" : "kits\/free\/Impure.html#union:U", "kind" : "val"}, {"label" : "withFilter", "tail" : "(p: (B) ⇒ Boolean)(F: Member[Choice, U]): Free[U, B]", "member" : "kits.free.Free.withFilter", "link" : "kits\/free\/Impure.html#withFilter(p:A=>Boolean)(implicitF:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Impure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Impure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Impure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Impure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Impure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Impure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Impure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Impure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Impure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Impure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Impure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Impure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Impure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Impure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Impure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Impure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kits\/free\/Impure.html", "kind" : "case class"}, {"name" : "kits.free.Inl", "shortDescription" : "", "members_case class" : [{"member" : "kits.free.Inl#<init>", "error" : "unsupported entity"}, {"label" : "head", "tail" : ": F", "member" : "kits.free.Inl.head", "link" : "kits\/free\/Inl.html#head:F", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Inl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Inl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Inl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Inl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Inl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Inl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Inl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Inl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Inl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Inl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Inl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Inl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Inl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Inl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Inl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Inl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kits\/free\/Inl.html", "kind" : "case class"}, {"name" : "kits.free.Inr", "shortDescription" : "", "members_case class" : [{"member" : "kits.free.Inr#<init>", "error" : "unsupported entity"}, {"label" : "tail", "tail" : ": U", "member" : "kits.free.Inr.tail", "link" : "kits\/free\/Inr.html#tail:U", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Inr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Inr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Inr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Inr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Inr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Inr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Inr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Inr.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Inr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Inr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Inr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Inr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Inr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Inr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Inr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Inr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kits\/free\/Inr.html", "kind" : "case class"}, {"name" : "kits.free.Lift", "shortDescription" : "", "object" : "kits\/free\/Lift$.html", "members_class" : [{"label" : "Member", "tail" : "", "member" : "kits.free.Lift.Member", "link" : "kits\/free\/Lift.html#Member[U]=kits.free.Member[kits.free.Lift[M],U]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Lift.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Lift.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Lift.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Lift.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Lift.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Lift.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Lift.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Lift.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Lift.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Lift.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Lift.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Lift.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Lift.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Lift.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Lift.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Lift.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Lift.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Lift.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Lift.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "exec", "tail" : "(M: Monad[M]): Exec { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Lift.exec", "link" : "kits\/free\/Lift$.html#exec[M[_]](implicitM:kits.Monad[M]):kits.free.Exec{typeSucc[U]=kits.free.Lift[M]:+:U;typeResult[A]=M[A]}", "kind" : "def"}, {"label" : "wrap", "tail" : "(ma: M[A])(F: Member[Lift[M], U]): Free[U, A]", "member" : "kits.free.Lift.wrap", "link" : "kits\/free\/Lift$.html#wrap[U,M[_],A](ma:M[A])(implicitF:kits.free.Member[kits.free.Lift[M],U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "run", "tail" : "(free: Free[:+:[Lift[M], Void], A])(M: Monad[M]): M[A]", "member" : "kits.free.Lift.run", "link" : "kits\/free\/Lift$.html#run[M[_],A](free:kits.free.Free[kits.free.Lift[M]:+:kits.free.Void,A])(implicitM:kits.Monad[M]):M[A]", "kind" : "def"}, {"label" : "Wrap", "tail" : "", "member" : "kits.free.Lift.Wrap", "link" : "kits\/free\/Lift$.html#Wrap[M[_],A]extendsLift[M]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Lift$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Lift$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Lift$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Lift$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Lift$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Lift$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Lift$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Lift$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Lift$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Lift$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Lift$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Lift$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Lift$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Lift$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Lift$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Lift$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Lift$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Lift$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Lift$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Lift.html", "kind" : "class"}, {"name" : "kits.free.Member", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Member.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Member.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Member.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Member.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Member.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Member.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Member.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Member.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Member.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Member.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Member.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Member.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Member.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Member.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Member.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Member.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Member.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Member.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Member.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "project", "tail" : "(u: U): Option[F]", "member" : "kits.free.Member.project", "link" : "kits\/free\/Member.html#project(u:U):Option[F]", "kind" : "abstract def"}, {"label" : "inject", "tail" : "(fa: F): U", "member" : "kits.free.Member.inject", "link" : "kits\/free\/Member.html#inject(fa:F):U", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kits\/free\/Member$.html", "members_object" : [{"label" : "RightMember", "tail" : "(F: Member[F, U]): Member[F, :+:[G, U]]", "member" : "kits.free.Member.RightMember", "link" : "kits\/free\/Member$.html#RightMember[F,G,U](implicitF:kits.free.Member[F,U]):kits.free.Member[F,G:+:U]", "kind" : "implicit def"}, {"label" : "LeftMember", "tail" : "(): Member[F, :+:[F, U]]", "member" : "kits.free.Member.LeftMember", "link" : "kits\/free\/Member$.html#LeftMember[F,U]:kits.free.Member[F,F:+:U]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Member$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Member$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Member$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Member$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Member$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Member$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Member$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Member$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Member$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Member$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Member$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Member$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Member$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Member$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Member$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Member$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Member$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Member$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Member$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kits\/free\/Member.html", "kind" : "trait"}, {"name" : "kits.free.Pure", "shortDescription" : "", "members_case class" : [{"label" : "flatMap", "tail" : "(f: (A) ⇒ Free[U, B]): Free[U, B]", "member" : "kits.free.Pure.flatMap", "link" : "kits\/free\/Pure.html#flatMap[B](f:A=>kits.free.Free[U,B]):kits.free.Free[U,B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Free[U, B]", "member" : "kits.free.Pure.map", "link" : "kits\/free\/Pure.html#map[B](f:A=>B):kits.free.Free[U,B]", "kind" : "def"}, {"member" : "kits.free.Pure#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "kits.free.Pure.value", "link" : "kits\/free\/Pure.html#value:A", "kind" : "val"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(F: Member[Choice, U]): Free[U, A]", "member" : "kits.free.Free.withFilter", "link" : "kits\/free\/Pure.html#withFilter(p:A=>Boolean)(implicitF:kits.free.Member[kits.free.Choice,U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Pure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Pure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Pure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Pure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Pure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Pure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Pure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Pure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Pure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Pure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Pure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Pure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Pure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Pure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Pure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Pure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kits\/free\/Pure.html", "kind" : "case class"}, {"name" : "kits.free.Reader", "shortDescription" : "", "object" : "kits\/free\/Reader$.html", "members_class" : [{"label" : "Member", "tail" : "", "member" : "kits.free.Reader.Member", "link" : "kits\/free\/Reader.html#Member[U]=kits.free.Member[kits.free.Reader[R],U]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Reader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Reader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Reader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Reader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Reader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Reader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Reader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Reader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Reader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Reader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Reader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Reader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Reader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Reader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Reader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Reader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Reader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Reader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Reader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "eval", "tail" : "(value: R): Eval { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Reader.eval", "link" : "kits\/free\/Reader$.html#eval[R](value:R):kits.free.Eval{typeSucc[U]=kits.free.Reader[R]:+:U;typeResult[A]=A}", "kind" : "def"}, {"label" : "local", "tail" : "(free: Free[U, A])(f: (R) ⇒ R)(arg0: Member[Reader[R], U]): Free[U, A]", "member" : "kits.free.Reader.local", "link" : "kits\/free\/Reader$.html#local[U,R,A](free:kits.free.Free[U,A])(f:R=>R)(implicitevidence$1:kits.free.Member[kits.free.Reader[R],U]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "ask", "tail" : "(F: Member[Reader[R], U]): Free[U, R]", "member" : "kits.free.Reader.ask", "link" : "kits\/free\/Reader$.html#ask[U,R](implicitF:kits.free.Member[kits.free.Reader[R],U]):kits.free.Free[U,R]", "kind" : "def"}, {"label" : "run", "tail" : "(free: Free[:+:[Reader[R], U], A], value: R): Free[U, A]", "member" : "kits.free.Reader.run", "link" : "kits\/free\/Reader$.html#run[U,R,A](free:kits.free.Free[kits.free.Reader[R]:+:U,A],value:R):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "Ask", "tail" : "", "member" : "kits.free.Reader.Ask", "link" : "kits\/free\/Reader$.html#Ask[R]extendsReader[R]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Reader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Reader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Reader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Reader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Reader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Reader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Reader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Reader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Reader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Reader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Reader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Reader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Reader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Reader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Reader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Reader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Reader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Reader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Reader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Reader.html", "kind" : "class"}, {"name" : "kits.free.State", "shortDescription" : "", "object" : "kits\/free\/State$.html", "members_class" : [{"label" : "Member", "tail" : "", "member" : "kits.free.State.Member", "link" : "kits\/free\/State.html#Member[U]=kits.free.Member[kits.free.State[S],U]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/State.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/State.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/State.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/State.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/State.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/State.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/State.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/State.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/State.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/State.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/State.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/State.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/State.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/State.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/State.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/State.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/State.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/State.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/State.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "eval", "tail" : "(state: S): Eval { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.State.eval", "link" : "kits\/free\/State$.html#eval[S](state:S):kits.free.Eval{typeSucc[U]=kits.free.State[S]:+:U;typeResult[A]=(S,A)}", "kind" : "def"}, {"label" : "modify", "tail" : "(f: (S) ⇒ S)(arg0: Member[State[S], U]): Free[U, Unit]", "member" : "kits.free.State.modify", "link" : "kits\/free\/State$.html#modify[U,S](f:S=>S)(implicitevidence$1:kits.free.Member[kits.free.State[S],U]):kits.free.Free[U,Unit]", "kind" : "def"}, {"label" : "put", "tail" : "(state: S)(F: Member[State[S], U]): Free[U, Unit]", "member" : "kits.free.State.put", "link" : "kits\/free\/State$.html#put[U,S](state:S)(implicitF:kits.free.Member[kits.free.State[S],U]):kits.free.Free[U,Unit]", "kind" : "def"}, {"label" : "get", "tail" : "(F: Member[State[S], U]): Free[U, S]", "member" : "kits.free.State.get", "link" : "kits\/free\/State$.html#get[U,S](implicitF:kits.free.Member[kits.free.State[S],U]):kits.free.Free[U,S]", "kind" : "def"}, {"label" : "run", "tail" : "(free: Free[:+:[State[S], U], A], state: S): Free[U, (S, A)]", "member" : "kits.free.State.run", "link" : "kits\/free\/State$.html#run[U,S,A](free:kits.free.Free[kits.free.State[S]:+:U,A],state:S):kits.free.Free[U,(S,A)]", "kind" : "def"}, {"label" : "Put", "tail" : "", "member" : "kits.free.State.Put", "link" : "kits\/free\/State$.html#Put[S]extendsState[S]withProductwithSerializable", "kind" : "case class"}, {"label" : "Get", "tail" : "", "member" : "kits.free.State.Get", "link" : "kits\/free\/State$.html#Get[S]extendsState[S]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/State$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/State$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/State$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/State$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/State$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/State$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/State$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/State$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/State$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/State$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/State$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/State$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/State$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/State$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/State$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/State$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/State$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/State$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/State$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/State.html", "kind" : "class"}, {"name" : "kits.free.Union", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Union.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Union.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Union.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Union.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Union.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Union.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Union.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Union.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Union.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Union.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Union.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Union.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Union.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Union.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Union.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Union.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Union.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Union.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Union.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Union.html", "kind" : "class"}, {"name" : "kits.free.Void", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Void.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Void.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Void.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Void.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Void.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Void.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Void.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Void.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Void.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Void.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Void.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Void.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Void.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Void.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Void.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Void.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Void.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Void.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Void.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Void.html", "kind" : "class"}, {"name" : "kits.free.Writer", "shortDescription" : "", "object" : "kits\/free\/Writer$.html", "members_class" : [{"label" : "Member", "tail" : "", "member" : "kits.free.Writer.Member", "link" : "kits\/free\/Writer.html#Member[U]=kits.free.Member[kits.free.Writer[W],U]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Writer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Writer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Writer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Writer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Writer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Writer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Writer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Writer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Writer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Writer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Writer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Writer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Writer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Writer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Writer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Writer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Writer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Writer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Writer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "eval", "tail" : "(W: Monoid[W]): Eval { ... \/* 2 definitions in type refinement *\/ }", "member" : "kits.free.Writer.eval", "link" : "kits\/free\/Writer$.html#eval[W](implicitW:kits.Monoid[W]):kits.free.Eval{typeSucc[U]=kits.free.Writer[W]:+:U;typeResult[A]=(W,A)}", "kind" : "def"}, {"label" : "pass", "tail" : "(free: Free[U, ((W) ⇒ W, A)])(arg0: Member[Writer[W], U], arg1: Monoid[W]): Free[U, A]", "member" : "kits.free.Writer.pass", "link" : "kits\/free\/Writer$.html#pass[U,W,A](free:kits.free.Free[U,(W=>W,A)])(implicitevidence$2:kits.free.Member[kits.free.Writer[W],U],implicitevidence$3:kits.Monoid[W]):kits.free.Free[U,A]", "kind" : "def"}, {"label" : "listen", "tail" : "(free: Free[U, A])(arg0: Member[Writer[W], U], W: Monoid[W]): Free[U, (W, A)]", "member" : "kits.free.Writer.listen", "link" : "kits\/free\/Writer$.html#listen[U,W,A](free:kits.free.Free[U,A])(implicitevidence$1:kits.free.Member[kits.free.Writer[W],U],implicitW:kits.Monoid[W]):kits.free.Free[U,(W,A)]", "kind" : "def"}, {"label" : "tell", "tail" : "(value: W)(F: Member[Writer[W], U]): Free[U, Unit]", "member" : "kits.free.Writer.tell", "link" : "kits\/free\/Writer$.html#tell[U,W](value:W)(implicitF:kits.free.Member[kits.free.Writer[W],U]):kits.free.Free[U,Unit]", "kind" : "def"}, {"label" : "run", "tail" : "(free: Free[:+:[Writer[W], U], A])(W: Monoid[W]): Free[U, (W, A)]", "member" : "kits.free.Writer.run", "link" : "kits\/free\/Writer$.html#run[U,W,A](free:kits.free.Free[kits.free.Writer[W]:+:U,A])(implicitW:kits.Monoid[W]):kits.free.Free[U,(W,A)]", "kind" : "def"}, {"label" : "Tell", "tail" : "", "member" : "kits.free.Writer.Tell", "link" : "kits\/free\/Writer$.html#Tell[W]extendsWriter[W]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/free\/Writer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/free\/Writer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/free\/Writer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/free\/Writer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/free\/Writer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/free\/Writer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/free\/Writer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Writer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Writer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/free\/Writer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/free\/Writer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/free\/Writer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/free\/Writer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/free\/Writer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/free\/Writer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/free\/Writer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/free\/Writer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/free\/Writer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/free\/Writer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/free\/Writer.html", "kind" : "class"}], "kits.lens" : [{"name" : "kits.lens.AsOptional", "shortDescription" : "", "members_class" : [{"label" : "asOpt", "tail" : "(): Optional[A, B]", "member" : "kits.lens.AsOptional.asOpt", "link" : "kits\/lens\/package$$AsOptional.html#asOpt:kits.lens.Optional[A,B]", "kind" : "def"}, {"member" : "kits.lens.AsOptional#<init>", "error" : "unsupported entity"}, {"label" : "lens", "tail" : ": Lens[A, Option[B]]", "member" : "kits.lens.AsOptional.lens", "link" : "kits\/lens\/package$$AsOptional.html#lens:kits.lens.Lens[A,Option[B]]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "kits\/lens\/package$$AsOptional.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "kits\/lens\/package$$AsOptional.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/package$$AsOptional.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/package$$AsOptional.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "kits\/lens\/package$$AsOptional.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "kits\/lens\/package$$AsOptional.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "kits\/lens\/package$$AsOptional.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "kits\/lens\/package$$AsOptional.html", "kind" : "class"}, {"name" : "kits.lens.Lens", "shortDescription" : "", "object" : "kits\/lens\/Lens$.html", "members_class" : [{"label" : "updateDynamic", "tail" : "(field: String)(value: Any): Any", "member" : "kits.lens.Lens.updateDynamic", "link" : "kits\/lens\/Lens.html#updateDynamic(field:String)(value:Any):Any", "kind" : "final macro def"}, {"label" : "selectDynamic", "tail" : "(field: String): Any", "member" : "kits.lens.Lens.selectDynamic", "link" : "kits\/lens\/Lens.html#selectDynamic(field:String):Any", "kind" : "final macro def"}, {"label" : "andThen", "tail" : "(that: Optional[B, C]): Optional[A, C]", "member" : "kits.lens.Lens.andThen", "link" : "kits\/lens\/Lens.html#andThen[C](that:kits.lens.Optional[B,C]):kits.lens.Optional[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Optional[C, A]): Optional[C, B]", "member" : "kits.lens.Lens.compose", "link" : "kits\/lens\/Lens.html#compose[C](that:kits.lens.Optional[C,A]):kits.lens.Optional[C,B]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Prism[B, C]): Optional[A, C]", "member" : "kits.lens.Lens.andThen", "link" : "kits\/lens\/Lens.html#andThen[C](that:kits.lens.Prism[B,C]):kits.lens.Optional[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Prism[C, A]): Optional[C, B]", "member" : "kits.lens.Lens.compose", "link" : "kits\/lens\/Lens.html#compose[C](that:kits.lens.Prism[C,A]):kits.lens.Optional[C,B]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Lens[B, C]): Lens[A, C]", "member" : "kits.lens.Lens.andThen", "link" : "kits\/lens\/Lens.html#andThen[C](that:kits.lens.Lens[B,C]):kits.lens.Lens[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Lens[C, A]): Lens[C, B]", "member" : "kits.lens.Lens.compose", "link" : "kits\/lens\/Lens.html#compose[C](that:kits.lens.Lens[C,A]):kits.lens.Lens[C,B]", "kind" : "final def"}, {"label" : "modify", "tail" : "(f: (B) ⇒ B)(a: A): A", "member" : "kits.lens.Lens.modify", "link" : "kits\/lens\/Lens.html#modify(f:B=>B)(a:A):A", "kind" : "final def"}, {"member" : "kits.lens.Lens#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/lens\/Lens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/lens\/Lens.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/lens\/Lens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/lens\/Lens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/lens\/Lens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/lens\/Lens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/lens\/Lens.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Lens.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Lens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Lens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/lens\/Lens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/lens\/Lens.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/lens\/Lens.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/lens\/Lens.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/lens\/Lens.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/lens\/Lens.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/lens\/Lens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/Lens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/Lens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B)(a: A): A", "member" : "kits.lens.Lens.set", "link" : "kits\/lens\/Lens.html#set(b:B)(a:A):A", "kind" : "abstract def"}, {"label" : "get", "tail" : "(a: A): B", "member" : "kits.lens.Lens.get", "link" : "kits\/lens\/Lens.html#get(a:A):B", "kind" : "abstract def"}], "members_object" : [{"label" : "apply", "tail" : "(): Lens[A, A]", "member" : "kits.lens.Lens.apply", "link" : "kits\/lens\/Lens$.html#apply[A]:kits.lens.Lens[A,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/lens\/Lens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/lens\/Lens$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/lens\/Lens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/lens\/Lens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/lens\/Lens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/lens\/Lens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/lens\/Lens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Lens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Lens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Lens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/lens\/Lens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/lens\/Lens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/lens\/Lens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/lens\/Lens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/lens\/Lens$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/lens\/Lens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/lens\/Lens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/Lens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/Lens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/lens\/Lens.html", "kind" : "class"}, {"name" : "kits.lens.LensMacros", "shortDescription" : "", "members_class" : [{"label" : "updateDynamic", "tail" : "(field: scala.reflect.macros.Universe.Tree)(value: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.Universe.WeakTypeTag[A]): scala.reflect.macros.Universe.Tree", "member" : "kits.lens.LensMacros.updateDynamic", "link" : "kits\/lens\/LensMacros.html#updateDynamic[A](field:LensMacros.this.c.universe.Tree)(value:LensMacros.this.c.universe.Tree)(implicitevidence$4:LensMacros.this.c.universe.WeakTypeTag[A]):LensMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "selectDynamic", "tail" : "(field: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.Universe.WeakTypeTag[A]): scala.reflect.macros.Universe.Tree", "member" : "kits.lens.LensMacros.selectDynamic", "link" : "kits\/lens\/LensMacros.html#selectDynamic[A](field:LensMacros.this.c.universe.Tree)(implicitevidence$3:LensMacros.this.c.universe.WeakTypeTag[A]):LensMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "makeLens", "tail" : "(name: scala.reflect.macros.Universe.TermName)(arg0: scala.reflect.macros.Universe.WeakTypeTag[A]): scala.reflect.macros.Universe.Tree", "member" : "kits.lens.LensMacros.makeLens", "link" : "kits\/lens\/LensMacros.html#makeLens[A](name:LensMacros.this.c.universe.TermName)(implicitevidence$2:LensMacros.this.c.universe.WeakTypeTag[A]):LensMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "makePrism", "tail" : "(name: scala.reflect.macros.Universe.TypeName)(arg0: scala.reflect.macros.Universe.WeakTypeTag[A]): scala.reflect.macros.Universe.Tree", "member" : "kits.lens.LensMacros.makePrism", "link" : "kits\/lens\/LensMacros.html#makePrism[A](name:LensMacros.this.c.universe.TypeName)(implicitevidence$1:LensMacros.this.c.universe.WeakTypeTag[A]):LensMacros.this.c.universe.Tree", "kind" : "def"}, {"member" : "kits.lens.LensMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "kits.lens.LensMacros.c", "link" : "kits\/lens\/LensMacros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/lens\/LensMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/lens\/LensMacros.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/lens\/LensMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/lens\/LensMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/lens\/LensMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/lens\/LensMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/lens\/LensMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/LensMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/LensMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/LensMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/lens\/LensMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/lens\/LensMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/lens\/LensMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/lens\/LensMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/lens\/LensMacros.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/lens\/LensMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/lens\/LensMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/LensMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/LensMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/lens\/LensMacros.html", "kind" : "class"}, {"name" : "kits.lens.Optional", "shortDescription" : "", "members_class" : [{"label" : "updateDynamic", "tail" : "(field: String)(value: Any): Any", "member" : "kits.lens.Optional.updateDynamic", "link" : "kits\/lens\/Optional.html#updateDynamic(field:String)(value:Any):Any", "kind" : "final macro def"}, {"label" : "selectDynamic", "tail" : "(field: String): Any", "member" : "kits.lens.Optional.selectDynamic", "link" : "kits\/lens\/Optional.html#selectDynamic(field:String):Any", "kind" : "final macro def"}, {"label" : "andThen", "tail" : "(that: Optional[B, C]): Optional[A, C]", "member" : "kits.lens.Optional.andThen", "link" : "kits\/lens\/Optional.html#andThen[C](that:kits.lens.Optional[B,C]):kits.lens.Optional[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Optional[C, A]): Optional[C, B]", "member" : "kits.lens.Optional.compose", "link" : "kits\/lens\/Optional.html#compose[C](that:kits.lens.Optional[C,A]):kits.lens.Optional[C,B]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Prism[B, C]): Optional[A, C]", "member" : "kits.lens.Optional.andThen", "link" : "kits\/lens\/Optional.html#andThen[C](that:kits.lens.Prism[B,C]):kits.lens.Optional[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Prism[C, A]): Optional[C, B]", "member" : "kits.lens.Optional.compose", "link" : "kits\/lens\/Optional.html#compose[C](that:kits.lens.Prism[C,A]):kits.lens.Optional[C,B]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Lens[B, C]): Optional[A, C]", "member" : "kits.lens.Optional.andThen", "link" : "kits\/lens\/Optional.html#andThen[C](that:kits.lens.Lens[B,C]):kits.lens.Optional[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Lens[C, A]): Optional[C, B]", "member" : "kits.lens.Optional.compose", "link" : "kits\/lens\/Optional.html#compose[C](that:kits.lens.Lens[C,A]):kits.lens.Optional[C,B]", "kind" : "final def"}, {"label" : "modify", "tail" : "(f: (B) ⇒ B)(a: A): A", "member" : "kits.lens.Optional.modify", "link" : "kits\/lens\/Optional.html#modify(f:B=>B)(a:A):A", "kind" : "final def"}, {"label" : "modifyOption", "tail" : "(f: (B) ⇒ B)(a: A): Option[A]", "member" : "kits.lens.Optional.modifyOption", "link" : "kits\/lens\/Optional.html#modifyOption(f:B=>B)(a:A):Option[A]", "kind" : "final def"}, {"member" : "kits.lens.Optional#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/lens\/Optional.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/lens\/Optional.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/lens\/Optional.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/lens\/Optional.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/lens\/Optional.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/lens\/Optional.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/lens\/Optional.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Optional.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Optional.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Optional.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/lens\/Optional.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/lens\/Optional.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/lens\/Optional.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/lens\/Optional.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/lens\/Optional.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/lens\/Optional.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/lens\/Optional.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/Optional.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/Optional.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B)(a: A): A", "member" : "kits.lens.Optional.set", "link" : "kits\/lens\/Optional.html#set(b:B)(a:A):A", "kind" : "abstract def"}, {"label" : "get", "tail" : "(a: A): Option[B]", "member" : "kits.lens.Optional.get", "link" : "kits\/lens\/Optional.html#get(a:A):Option[B]", "kind" : "abstract def"}], "class" : "kits\/lens\/Optional.html", "kind" : "class"}, {"name" : "kits.lens.Prism", "shortDescription" : "", "object" : "kits\/lens\/Prism$.html", "members_class" : [{"label" : "selectDynamic", "tail" : "(field: String): Any", "member" : "kits.lens.Prism.selectDynamic", "link" : "kits\/lens\/Prism.html#selectDynamic(field:String):Any", "kind" : "final macro def"}, {"label" : "andThen", "tail" : "(that: Optional[B, C]): Optional[A, C]", "member" : "kits.lens.Prism.andThen", "link" : "kits\/lens\/Prism.html#andThen[C](that:kits.lens.Optional[B,C]):kits.lens.Optional[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Optional[C, A]): Optional[C, B]", "member" : "kits.lens.Prism.compose", "link" : "kits\/lens\/Prism.html#compose[C](that:kits.lens.Optional[C,A]):kits.lens.Optional[C,B]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Prism[B, C]): Prism[A, C]", "member" : "kits.lens.Prism.andThen", "link" : "kits\/lens\/Prism.html#andThen[C](that:kits.lens.Prism[B,C]):kits.lens.Prism[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Prism[C, A]): Prism[C, B]", "member" : "kits.lens.Prism.compose", "link" : "kits\/lens\/Prism.html#compose[C](that:kits.lens.Prism[C,A]):kits.lens.Prism[C,B]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Lens[B, C]): Optional[A, C]", "member" : "kits.lens.Prism.andThen", "link" : "kits\/lens\/Prism.html#andThen[C](that:kits.lens.Lens[B,C]):kits.lens.Optional[A,C]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Lens[C, A]): Optional[C, B]", "member" : "kits.lens.Prism.compose", "link" : "kits\/lens\/Prism.html#compose[C](that:kits.lens.Lens[C,A]):kits.lens.Optional[C,B]", "kind" : "final def"}, {"label" : "modify", "tail" : "(f: (B) ⇒ B)(a: A): A", "member" : "kits.lens.Prism.modify", "link" : "kits\/lens\/Prism.html#modify(f:B=>B)(a:A):A", "kind" : "final def"}, {"label" : "modifyOption", "tail" : "(f: (B) ⇒ B)(a: A): Option[A]", "member" : "kits.lens.Prism.modifyOption", "link" : "kits\/lens\/Prism.html#modifyOption(f:B=>B)(a:A):Option[A]", "kind" : "final def"}, {"member" : "kits.lens.Prism#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/lens\/Prism.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/lens\/Prism.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/lens\/Prism.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/lens\/Prism.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/lens\/Prism.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/lens\/Prism.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/lens\/Prism.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Prism.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Prism.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Prism.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/lens\/Prism.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/lens\/Prism.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/lens\/Prism.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/lens\/Prism.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/lens\/Prism.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/lens\/Prism.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/lens\/Prism.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/Prism.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/Prism.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(b: B): A", "member" : "kits.lens.Prism.apply", "link" : "kits\/lens\/Prism.html#apply(b:B):A", "kind" : "abstract def"}, {"label" : "unapply", "tail" : "(a: A): Option[B]", "member" : "kits.lens.Prism.unapply", "link" : "kits\/lens\/Prism.html#unapply(a:A):Option[B]", "kind" : "abstract def"}], "members_object" : [{"label" : "apply", "tail" : "(): Prism[A, A]", "member" : "kits.lens.Prism.apply", "link" : "kits\/lens\/Prism$.html#apply[A]:kits.lens.Prism[A,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/lens\/Prism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/lens\/Prism$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/lens\/Prism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/lens\/Prism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/lens\/Prism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/lens\/Prism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/lens\/Prism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Prism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Prism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/lens\/Prism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/lens\/Prism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/lens\/Prism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/lens\/Prism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/lens\/Prism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/lens\/Prism$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/lens\/Prism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/lens\/Prism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/Prism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/Prism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kits\/lens\/Prism.html", "kind" : "class"}, {"name" : "kits.lens.WithLens", "shortDescription" : "", "members_class" : [{"label" : "withLens", "tail" : "(f: (Lens[A, A]) ⇒ (A) ⇒ A): A", "member" : "kits.lens.WithLens.withLens", "link" : "kits\/lens\/package$$WithLens.html#withLens(f:kits.lens.Lens[A,A]=>(A=>A)):A", "kind" : "def"}, {"member" : "kits.lens.WithLens#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "kits.lens.WithLens.a", "link" : "kits\/lens\/package$$WithLens.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "kits\/lens\/package$$WithLens.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "kits\/lens\/package$$WithLens.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/lens\/package$$WithLens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/lens\/package$$WithLens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "kits\/lens\/package$$WithLens.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "kits\/lens\/package$$WithLens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "kits\/lens\/package$$WithLens.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "kits\/lens\/package$$WithLens.html", "kind" : "class"}], "kits.std" : [{"name" : "kits.std.ConjMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: Boolean, y: Boolean): Boolean", "member" : "kits.std.ConjMonoid.append", "link" : "kits\/std\/ConjMonoid.html#append(x:Boolean,y:Boolean):Boolean", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Boolean", "member" : "kits.std.ConjMonoid.empty", "link" : "kits\/std\/ConjMonoid.html#empty:Boolean", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]Boolean]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/ConjMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/ConjMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/ConjMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/ConjMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/ConjMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/ConjMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/ConjMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/ConjMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ConjMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ConjMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ConjMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/ConjMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/ConjMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/ConjMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/ConjMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/ConjMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/ConjMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/ConjMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/ConjMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/ConjMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/ConjMonoid.html", "kind" : "trait"}, {"name" : "kits.std.DisjMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: Boolean, y: Boolean): Boolean", "member" : "kits.std.DisjMonoid.append", "link" : "kits\/std\/DisjMonoid.html#append(x:Boolean,y:Boolean):Boolean", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Boolean", "member" : "kits.std.DisjMonoid.empty", "link" : "kits\/std\/DisjMonoid.html#empty:Boolean", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]Boolean]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/DisjMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/DisjMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/DisjMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/DisjMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/DisjMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/DisjMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/DisjMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/DisjMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/DisjMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/DisjMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/DisjMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/DisjMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/DisjMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/DisjMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/DisjMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/DisjMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/DisjMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/DisjMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/DisjMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/DisjMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/DisjMonoid.html", "kind" : "trait"}, {"name" : "kits.std.EitherApplicative", "members_trait" : [{"label" : "ap", "tail" : "(fa: Either[E, A])(f: Either[E, (A) ⇒ B]): Either[E, B]", "member" : "kits.std.EitherApplicative.ap", "link" : "kits\/std\/EitherApplicative.html#ap[A,B](fa:Either[E,A])(f:Either[E,A=>B]):Either[E,B]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Either[E, A]", "member" : "kits.std.EitherApplicative.pure", "link" : "kits\/std\/EitherApplicative.html#pure[A](a:A):Either[E,A]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Either[E, G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/EitherApplicative.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Either[E, A], fb: Either[E, B], fc: Either[E, C])(f: (A, B, C) ⇒ D): Either[E, D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/EitherApplicative.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Either[E, A], fb: Either[E, B])(f: (A, B) ⇒ C): Either[E, C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/EitherApplicative.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Either[E, A])(f: (A) ⇒ B): Either[E, B]", "member" : "kits.Applicative.map", "link" : "kits\/std\/EitherApplicative.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Either[E, G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/EitherApplicative.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/EitherApplicative.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/EitherApplicative.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/EitherApplicative.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/EitherApplicative.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/EitherApplicative.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/EitherApplicative.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/EitherApplicative.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherApplicative.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherApplicative.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherApplicative.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/EitherApplicative.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/EitherApplicative.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/EitherApplicative.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/EitherApplicative.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/EitherApplicative.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/EitherApplicative.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/EitherApplicative.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/EitherApplicative.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/EitherApplicative.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[E]", "member" : "kits.std.EitherApplicative.monoid", "link" : "kits\/std\/EitherApplicative.html#monoid:kits.Monoid[E]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/EitherApplicative.html", "kind" : "trait"}, {"name" : "kits.std.EitherFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: Either[E, A])(f: (A) ⇒ B): Either[E, B]", "member" : "kits.std.EitherFunctor.map", "link" : "kits\/std\/EitherFunctor.html#map[A,B](fa:Either[E,A])(f:A=>B):Either[E,B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Either[E, G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/EitherFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/EitherFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/EitherFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/EitherFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/EitherFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/EitherFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/EitherFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/EitherFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/EitherFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/EitherFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/EitherFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/EitherFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/EitherFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/EitherFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/EitherFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/EitherFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/EitherFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/EitherFunctor.html", "kind" : "trait"}, {"name" : "kits.std.EitherMonad", "members_trait" : [{"label" : "flatMap", "tail" : "(fa: Either[E, A])(f: (A) ⇒ Either[E, B]): Either[E, B]", "member" : "kits.std.EitherMonad.flatMap", "link" : "kits\/std\/EitherMonad.html#flatMap[A,B](fa:Either[E,A])(f:A=>Either[E,B]):Either[E,B]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Either[E, A]", "member" : "kits.std.EitherMonad.pure", "link" : "kits\/std\/EitherMonad.html#pure[A](a:A):Either[E,A]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ffa: Either[E, Either[E, A]]): Either[E, A]", "member" : "kits.Monad.flatten", "link" : "kits\/std\/EitherMonad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: Either[E, A])(f: Either[E, (A) ⇒ B]): Either[E, B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/EitherMonad.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Either[E, A])(f: (A) ⇒ B): Either[E, B]", "member" : "kits.Monad.map", "link" : "kits\/std\/EitherMonad.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Either[E, G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/EitherMonad.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Either[E, A], fb: Either[E, B], fc: Either[E, C])(f: (A, B, C) ⇒ D): Either[E, D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/EitherMonad.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Either[E, A], fb: Either[E, B])(f: (A, B) ⇒ C): Either[E, C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/EitherMonad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Either[E, G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/EitherMonad.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/EitherMonad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/EitherMonad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/EitherMonad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/EitherMonad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/EitherMonad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/EitherMonad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/EitherMonad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherMonad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherMonad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherMonad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/EitherMonad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/EitherMonad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/EitherMonad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/EitherMonad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/EitherMonad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/EitherMonad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/EitherMonad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/EitherMonad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/EitherMonad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/EitherMonad.html", "kind" : "trait"}, {"name" : "kits.std.EitherTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Either[E, A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[Either[E, B]]", "member" : "kits.std.EitherTraverse.traverse", "link" : "kits\/std\/EitherTraverse.html#traverse[F[_],A,B](fa:Either[E,A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[Either[E,B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Either[E, G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/EitherTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Either[E, A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/EitherTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Either[E, A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/EitherTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Either[E, G[A]])(arg0: Applicative[G]): G[Either[E, A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/EitherTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Either[E, A])(f: (A) ⇒ B): Either[E, B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/EitherTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Either[E, G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/EitherTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/EitherTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/EitherTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/EitherTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/EitherTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/EitherTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/EitherTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/EitherTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/EitherTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/EitherTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/EitherTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/EitherTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/EitherTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/EitherTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/EitherTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/EitherTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/EitherTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/EitherTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/EitherTraverse.html", "kind" : "trait"}, {"name" : "kits.std.Function0Functor", "members_trait" : [{"label" : "map", "tail" : "(fa: () ⇒ A)(f: (A) ⇒ B): () ⇒ B", "member" : "kits.std.Function0Functor.map", "link" : "kits\/std\/Function0Functor.html#map[A,B](fa:()=>A)(f:A=>B):()=>B", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]() ⇒ G[A]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/Function0Functor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/Function0Functor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/Function0Functor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/Function0Functor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/Function0Functor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/Function0Functor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/Function0Functor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/Function0Functor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Functor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Functor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Functor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/Function0Functor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/Function0Functor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/Function0Functor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/Function0Functor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/Function0Functor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/Function0Functor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/Function0Functor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/Function0Functor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/Function0Functor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/Function0Functor.html", "kind" : "trait"}, {"name" : "kits.std.Function0Monad", "members_trait" : [{"label" : "flatMap", "tail" : "(fa: () ⇒ A)(f: (A) ⇒ () ⇒ B): () ⇒ B", "member" : "kits.std.Function0Monad.flatMap", "link" : "kits\/std\/Function0Monad.html#flatMap[A,B](fa:()=>A)(f:A=>(()=>B)):()=>B", "kind" : "final def"}, {"label" : "ap", "tail" : "(fa: () ⇒ A)(f: () ⇒ (A) ⇒ B): () ⇒ B", "member" : "kits.std.Function0Monad.ap", "link" : "kits\/std\/Function0Monad.html#ap[A,B](fa:()=>A)(f:()=>A=>B):()=>B", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): () ⇒ A", "member" : "kits.std.Function0Monad.pure", "link" : "kits\/std\/Function0Monad.html#pure[A](a:A):()=>A", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ffa: () ⇒ () ⇒ A): () ⇒ A", "member" : "kits.Monad.flatten", "link" : "kits\/std\/Function0Monad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: () ⇒ A)(f: (A) ⇒ B): () ⇒ B", "member" : "kits.Monad.map", "link" : "kits\/std\/Function0Monad.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]() ⇒ G[A]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/Function0Monad.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: () ⇒ A, fb: () ⇒ B, fc: () ⇒ C)(f: (A, B, C) ⇒ D): () ⇒ D", "member" : "kits.Applicative.map3", "link" : "kits\/std\/Function0Monad.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: () ⇒ A, fb: () ⇒ B)(f: (A, B) ⇒ C): () ⇒ C", "member" : "kits.Applicative.map2", "link" : "kits\/std\/Function0Monad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]() ⇒ G[A]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/Function0Monad.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/Function0Monad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/Function0Monad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/Function0Monad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/Function0Monad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/Function0Monad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/Function0Monad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/Function0Monad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Monad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Monad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Monad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/Function0Monad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/Function0Monad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/Function0Monad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/Function0Monad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/Function0Monad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/Function0Monad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/Function0Monad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/Function0Monad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/Function0Monad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/Function0Monad.html", "kind" : "trait"}, {"name" : "kits.std.Function0Monoid", "members_trait" : [{"label" : "append", "tail" : "(x: () ⇒ A, y: () ⇒ A): () ⇒ A", "member" : "kits.std.Function0Monoid.append", "link" : "kits\/std\/Function0Monoid.html#append(x:()=>A,y:()=>A):()=>A", "kind" : "def"}, {"label" : "empty", "tail" : "(): () ⇒ A", "member" : "kits.std.Function0Monoid.empty", "link" : "kits\/std\/Function0Monoid.html#empty:()=>A", "kind" : "def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]() ⇒ A]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/Function0Monoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/Function0Monoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/Function0Monoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/Function0Monoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/Function0Monoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/Function0Monoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/Function0Monoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/Function0Monoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Monoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Monoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Monoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/Function0Monoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/Function0Monoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/Function0Monoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/Function0Monoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/Function0Monoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/Function0Monoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/Function0Monoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/Function0Monoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/Function0Monoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[A]", "member" : "kits.std.Function0Monoid.monoid", "link" : "kits\/std\/Function0Monoid.html#monoid:kits.Monoid[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/Function0Monoid.html", "kind" : "trait"}, {"name" : "kits.std.Function0Traverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: () ⇒ A)(f: (A) ⇒ F[B])(F: Applicative[F]): F[() ⇒ B]", "member" : "kits.std.Function0Traverse.traverse", "link" : "kits\/std\/Function0Traverse.html#traverse[F[_],A,B](fa:()=>A)(f:A=>F[B])(implicitF:kits.Applicative[F]):F[()=>B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]() ⇒ G[A]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/Function0Traverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: () ⇒ A)(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/Function0Traverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: () ⇒ A)(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/Function0Traverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: () ⇒ G[A])(arg0: Applicative[G]): G[() ⇒ A]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/Function0Traverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: () ⇒ A)(f: (A) ⇒ B): () ⇒ B", "member" : "kits.Traverse.map", "link" : "kits\/std\/Function0Traverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]() ⇒ G[A]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/Function0Traverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/Function0Traverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/Function0Traverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/Function0Traverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/Function0Traverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/Function0Traverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/Function0Traverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/Function0Traverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Traverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Traverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Function0Traverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/Function0Traverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/Function0Traverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/Function0Traverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/Function0Traverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/Function0Traverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/Function0Traverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/Function0Traverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/Function0Traverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/Function0Traverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/Function0Traverse.html", "kind" : "trait"}, {"name" : "kits.std.FutureMonad", "members_trait" : [{"label" : "flatMap", "tail" : "(fa: Future[A])(f: (A) ⇒ Future[B]): Future[B]", "member" : "kits.std.FutureMonad.flatMap", "link" : "kits\/std\/FutureMonad.html#flatMap[A,B](fa:scala.concurrent.Future[A])(f:A=>scala.concurrent.Future[B]):scala.concurrent.Future[B]", "kind" : "final def"}, {"label" : "map", "tail" : "(fa: Future[A])(f: (A) ⇒ B): Future[B]", "member" : "kits.std.FutureMonad.map", "link" : "kits\/std\/FutureMonad.html#map[A,B](fa:scala.concurrent.Future[A])(f:A=>B):scala.concurrent.Future[B]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Future[A]", "member" : "kits.std.FutureMonad.pure", "link" : "kits\/std\/FutureMonad.html#pure[A](a:A):scala.concurrent.Future[A]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ffa: Future[Future[A]]): Future[A]", "member" : "kits.Monad.flatten", "link" : "kits\/std\/FutureMonad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: Future[A])(f: Future[(A) ⇒ B]): Future[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/FutureMonad.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Future[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/FutureMonad.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Future[A], fb: Future[B], fc: Future[C])(f: (A, B, C) ⇒ D): Future[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/FutureMonad.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Future[A], fb: Future[B])(f: (A, B) ⇒ C): Future[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/FutureMonad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Future[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/FutureMonad.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/FutureMonad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/FutureMonad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/FutureMonad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/FutureMonad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/FutureMonad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/FutureMonad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/FutureMonad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/FutureMonad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/FutureMonad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/FutureMonad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/FutureMonad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/FutureMonad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/FutureMonad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/FutureMonad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/FutureMonad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/FutureMonad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/FutureMonad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/FutureMonad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/FutureMonad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "executor", "tail" : "(): ExecutionContext", "member" : "kits.std.FutureMonad.executor", "link" : "kits\/std\/FutureMonad.html#executor:scala.concurrent.ExecutionContext", "kind" : "implicit abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/FutureMonad.html", "kind" : "trait"}, {"name" : "kits.std.IdentityFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: Identity[A])(f: (A) ⇒ B): Identity[B]", "member" : "kits.std.IdentityFunctor.map", "link" : "kits\/std\/IdentityFunctor.html#map[A,B](fa:kits.Identity[A])(f:A=>B):kits.Identity[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Identity[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/IdentityFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/IdentityFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/IdentityFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/IdentityFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/IdentityFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/IdentityFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/IdentityFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/IdentityFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/IdentityFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/IdentityFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/IdentityFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/IdentityFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/IdentityFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/IdentityFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/IdentityFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/IdentityFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/IdentityFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/IdentityFunctor.html", "kind" : "trait"}, {"name" : "kits.std.IdentityMonad", "members_trait" : [{"label" : "flatMap", "tail" : "(fa: Identity[A])(f: (A) ⇒ Identity[B]): Identity[B]", "member" : "kits.std.IdentityMonad.flatMap", "link" : "kits\/std\/IdentityMonad.html#flatMap[A,B](fa:kits.Identity[A])(f:A=>kits.Identity[B]):kits.Identity[B]", "kind" : "final def"}, {"label" : "ap", "tail" : "(fa: Identity[A])(f: Identity[(A) ⇒ B]): Identity[B]", "member" : "kits.std.IdentityMonad.ap", "link" : "kits\/std\/IdentityMonad.html#ap[A,B](fa:kits.Identity[A])(f:kits.Identity[A=>B]):kits.Identity[B]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Identity[A]", "member" : "kits.std.IdentityMonad.pure", "link" : "kits\/std\/IdentityMonad.html#pure[A](a:A):kits.Identity[A]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ffa: Identity[Identity[A]]): Identity[A]", "member" : "kits.Monad.flatten", "link" : "kits\/std\/IdentityMonad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Identity[A])(f: (A) ⇒ B): Identity[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/IdentityMonad.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Identity[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/IdentityMonad.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Identity[A], fb: Identity[B], fc: Identity[C])(f: (A, B, C) ⇒ D): Identity[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/IdentityMonad.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Identity[A], fb: Identity[B])(f: (A, B) ⇒ C): Identity[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/IdentityMonad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Identity[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/IdentityMonad.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/IdentityMonad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/IdentityMonad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/IdentityMonad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/IdentityMonad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/IdentityMonad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/IdentityMonad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/IdentityMonad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityMonad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityMonad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityMonad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/IdentityMonad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/IdentityMonad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/IdentityMonad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/IdentityMonad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/IdentityMonad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/IdentityMonad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/IdentityMonad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/IdentityMonad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/IdentityMonad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/IdentityMonad.html", "kind" : "trait"}, {"name" : "kits.std.IdentityTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Identity[A])(f: (A) ⇒ F[B])(arg0: Applicative[F]): F[Identity[B]]", "member" : "kits.std.IdentityTraverse.traverse", "link" : "kits\/std\/IdentityTraverse.html#traverse[F[_],A,B](fa:kits.Identity[A])(f:A=>F[B])(implicitevidence$1:kits.Applicative[F]):F[kits.Identity[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Identity[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/IdentityTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Identity[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/IdentityTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Identity[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/IdentityTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Identity[G[A]])(arg0: Applicative[G]): G[Identity[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/IdentityTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Identity[A])(f: (A) ⇒ B): Identity[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/IdentityTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Identity[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/IdentityTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/IdentityTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/IdentityTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/IdentityTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/IdentityTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/IdentityTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/IdentityTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/IdentityTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IdentityTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/IdentityTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/IdentityTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/IdentityTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/IdentityTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/IdentityTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/IdentityTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/IdentityTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/IdentityTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/IdentityTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/IdentityTraverse.html", "kind" : "trait"}, {"name" : "kits.std.IndexedSeqFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: IndexedSeq[A])(f: (A) ⇒ B): IndexedSeq[B]", "member" : "kits.std.IndexedSeqFunctor.map", "link" : "kits\/std\/IndexedSeqFunctor.html#map[A,B](fa:scala.collection.immutable.IndexedSeq[A])(f:A=>B):scala.collection.immutable.IndexedSeq[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]IndexedSeq[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/IndexedSeqFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/IndexedSeqFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/IndexedSeqFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/IndexedSeqFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/IndexedSeqFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/IndexedSeqFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/IndexedSeqFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/IndexedSeqFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/IndexedSeqFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/IndexedSeqFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/IndexedSeqFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/IndexedSeqFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/IndexedSeqFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/IndexedSeqFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/IndexedSeqFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/IndexedSeqFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/IndexedSeqFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/IndexedSeqFunctor.html", "kind" : "trait"}, {"name" : "kits.std.IndexedSeqMonadPlus", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: IndexedSeq[IndexedSeq[A]]): IndexedSeq[A]", "member" : "kits.std.IndexedSeqMonadPlus.flatten", "link" : "kits\/std\/IndexedSeqMonadPlus.html#flatten[A](ffa:scala.collection.immutable.IndexedSeq[scala.collection.immutable.IndexedSeq[A]]):scala.collection.immutable.IndexedSeq[A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: IndexedSeq[A])(f: (A) ⇒ IndexedSeq[B]): IndexedSeq[B]", "member" : "kits.std.IndexedSeqMonadPlus.flatMap", "link" : "kits\/std\/IndexedSeqMonadPlus.html#flatMap[A,B](fa:scala.collection.immutable.IndexedSeq[A])(f:A=>scala.collection.immutable.IndexedSeq[B]):scala.collection.immutable.IndexedSeq[B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fa: IndexedSeq[A])(p: (A) ⇒ Boolean): IndexedSeq[A]", "member" : "kits.std.IndexedSeqMonadPlus.filter", "link" : "kits\/std\/IndexedSeqMonadPlus.html#filter[A](fa:scala.collection.immutable.IndexedSeq[A])(p:A=>Boolean):scala.collection.immutable.IndexedSeq[A]", "kind" : "final def"}, {"label" : "plus", "tail" : "(x: IndexedSeq[A], y: IndexedSeq[A]): IndexedSeq[A]", "member" : "kits.std.IndexedSeqMonadPlus.plus", "link" : "kits\/std\/IndexedSeqMonadPlus.html#plus[A](x:scala.collection.immutable.IndexedSeq[A],y:scala.collection.immutable.IndexedSeq[A]):scala.collection.immutable.IndexedSeq[A]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): IndexedSeq[A]", "member" : "kits.std.IndexedSeqMonadPlus.pure", "link" : "kits\/std\/IndexedSeqMonadPlus.html#pure[A](a:A):scala.collection.immutable.IndexedSeq[A]", "kind" : "final def"}, {"label" : "zero", "tail" : "(): IndexedSeq[A]", "member" : "kits.std.IndexedSeqMonadPlus.zero", "link" : "kits\/std\/IndexedSeqMonadPlus.html#zero[A]:scala.collection.immutable.IndexedSeq[A]", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[IndexedSeq[A]]", "member" : "kits.MonadPlus.monoid", "link" : "kits\/std\/IndexedSeqMonadPlus.html#monoid[A]:kits.Monoid[F[A]]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: IndexedSeq[A])(f: IndexedSeq[(A) ⇒ B]): IndexedSeq[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/IndexedSeqMonadPlus.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: IndexedSeq[A])(f: (A) ⇒ B): IndexedSeq[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/IndexedSeqMonadPlus.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]IndexedSeq[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/IndexedSeqMonadPlus.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: IndexedSeq[A], fb: IndexedSeq[B], fc: IndexedSeq[C])(f: (A, B, C) ⇒ D): IndexedSeq[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/IndexedSeqMonadPlus.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: IndexedSeq[A], fb: IndexedSeq[B])(f: (A, B) ⇒ C): IndexedSeq[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/IndexedSeqMonadPlus.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]IndexedSeq[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/IndexedSeqMonadPlus.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/IndexedSeqMonadPlus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/IndexedSeqMonadPlus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/IndexedSeqMonadPlus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/IndexedSeqMonadPlus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/IndexedSeqMonadPlus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/IndexedSeqMonadPlus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/IndexedSeqMonadPlus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqMonadPlus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqMonadPlus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqMonadPlus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/IndexedSeqMonadPlus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/IndexedSeqMonadPlus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/IndexedSeqMonadPlus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/IndexedSeqMonadPlus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/IndexedSeqMonadPlus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/IndexedSeqMonadPlus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/IndexedSeqMonadPlus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/IndexedSeqMonadPlus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/IndexedSeqMonadPlus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/IndexedSeqMonadPlus.html", "kind" : "trait"}, {"name" : "kits.std.IndexedSeqTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: IndexedSeq[A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[IndexedSeq[B]]", "member" : "kits.std.IndexedSeqTraverse.traverse", "link" : "kits\/std\/IndexedSeqTraverse.html#traverse[F[_],A,B](fa:scala.collection.immutable.IndexedSeq[A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[scala.collection.immutable.IndexedSeq[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]IndexedSeq[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/IndexedSeqTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: IndexedSeq[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/IndexedSeqTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: IndexedSeq[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/IndexedSeqTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: IndexedSeq[G[A]])(arg0: Applicative[G]): G[IndexedSeq[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/IndexedSeqTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: IndexedSeq[A])(f: (A) ⇒ B): IndexedSeq[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/IndexedSeqTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]IndexedSeq[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/IndexedSeqTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/IndexedSeqTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/IndexedSeqTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/IndexedSeqTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/IndexedSeqTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/IndexedSeqTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/IndexedSeqTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/IndexedSeqTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/IndexedSeqTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/IndexedSeqTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/IndexedSeqTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/IndexedSeqTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/IndexedSeqTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/IndexedSeqTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/IndexedSeqTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/IndexedSeqTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/IndexedSeqTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/IndexedSeqTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/IndexedSeqTraverse.html", "kind" : "trait"}, {"name" : "kits.std.ListFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: List[A])(f: (A) ⇒ B): List[B]", "member" : "kits.std.ListFunctor.map", "link" : "kits\/std\/ListFunctor.html#map[A,B](fa:List[A])(f:A=>B):List[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]List[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/ListFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/ListFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/ListFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/ListFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/ListFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/ListFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/ListFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/ListFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/ListFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/ListFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/ListFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/ListFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/ListFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/ListFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/ListFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/ListFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/ListFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/ListFunctor.html", "kind" : "trait"}, {"name" : "kits.std.ListMonadPlus", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: List[List[A]]): List[A]", "member" : "kits.std.ListMonadPlus.flatten", "link" : "kits\/std\/ListMonadPlus.html#flatten[A](ffa:List[List[A]]):List[A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: List[A])(f: (A) ⇒ List[B]): List[B]", "member" : "kits.std.ListMonadPlus.flatMap", "link" : "kits\/std\/ListMonadPlus.html#flatMap[A,B](fa:List[A])(f:A=>List[B]):List[B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fa: List[A])(p: (A) ⇒ Boolean): List[A]", "member" : "kits.std.ListMonadPlus.filter", "link" : "kits\/std\/ListMonadPlus.html#filter[A](fa:List[A])(p:A=>Boolean):List[A]", "kind" : "final def"}, {"label" : "plus", "tail" : "(x: List[A], y: List[A]): List[A]", "member" : "kits.std.ListMonadPlus.plus", "link" : "kits\/std\/ListMonadPlus.html#plus[A](x:List[A],y:List[A]):List[A]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): List[A]", "member" : "kits.std.ListMonadPlus.pure", "link" : "kits\/std\/ListMonadPlus.html#pure[A](a:A):List[A]", "kind" : "final def"}, {"label" : "zero", "tail" : "(): List[A]", "member" : "kits.std.ListMonadPlus.zero", "link" : "kits\/std\/ListMonadPlus.html#zero[A]:List[A]", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[List[A]]", "member" : "kits.MonadPlus.monoid", "link" : "kits\/std\/ListMonadPlus.html#monoid[A]:kits.Monoid[F[A]]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: List[A])(f: List[(A) ⇒ B]): List[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/ListMonadPlus.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: List[A])(f: (A) ⇒ B): List[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/ListMonadPlus.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]List[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/ListMonadPlus.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: List[A], fb: List[B], fc: List[C])(f: (A, B, C) ⇒ D): List[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/ListMonadPlus.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: List[A], fb: List[B])(f: (A, B) ⇒ C): List[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/ListMonadPlus.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]List[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/ListMonadPlus.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/ListMonadPlus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/ListMonadPlus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/ListMonadPlus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/ListMonadPlus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/ListMonadPlus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/ListMonadPlus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/ListMonadPlus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListMonadPlus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListMonadPlus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListMonadPlus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/ListMonadPlus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/ListMonadPlus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/ListMonadPlus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/ListMonadPlus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/ListMonadPlus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/ListMonadPlus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/ListMonadPlus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/ListMonadPlus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/ListMonadPlus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/ListMonadPlus.html", "kind" : "trait"}, {"name" : "kits.std.ListTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: List[A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[List[B]]", "member" : "kits.std.ListTraverse.traverse", "link" : "kits\/std\/ListTraverse.html#traverse[F[_],A,B](fa:List[A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[List[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]List[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/ListTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: List[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/ListTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: List[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/ListTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: List[G[A]])(arg0: Applicative[G]): G[List[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/ListTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: List[A])(f: (A) ⇒ B): List[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/ListTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]List[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/ListTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/ListTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/ListTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/ListTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/ListTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/ListTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/ListTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/ListTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ListTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/ListTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/ListTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/ListTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/ListTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/ListTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/ListTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/ListTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/ListTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/ListTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/ListTraverse.html", "kind" : "trait"}, {"name" : "kits.std.MapMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: Map[K, V], y: Map[K, V]): Map[K, V]", "member" : "kits.std.MapMonoid.append", "link" : "kits\/std\/MapMonoid.html#append(x:Map[K,V],y:Map[K,V]):Map[K,V]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Map[K, V]", "member" : "kits.std.MapMonoid.empty", "link" : "kits\/std\/MapMonoid.html#empty:Map[K,V]", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]Map[K, V]]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/MapMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/MapMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/MapMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/MapMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/MapMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/MapMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/MapMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/MapMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/MapMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/MapMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/MapMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/MapMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/MapMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/MapMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/MapMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/MapMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/MapMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/MapMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/MapMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/MapMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[V]", "member" : "kits.std.MapMonoid.monoid", "link" : "kits\/std\/MapMonoid.html#monoid:kits.Monoid[V]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/MapMonoid.html", "kind" : "trait"}, {"name" : "kits.std.MapTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Map[K, A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[Map[K, B]]", "member" : "kits.std.MapTraverse.traverse", "link" : "kits\/std\/MapTraverse.html#traverse[F[_],A,B](fa:Map[K,A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[Map[K,B]]", "kind" : "final def"}, {"label" : "map", "tail" : "(fa: Map[K, A])(f: (A) ⇒ B): Map[K, B]", "member" : "kits.std.MapTraverse.map", "link" : "kits\/std\/MapTraverse.html#map[A,B](fa:Map[K,A])(f:A=>B):Map[K,B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Map[K, G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/MapTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Map[K, A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/MapTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Map[K, A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/MapTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Map[K, G[A]])(arg0: Applicative[G]): G[Map[K, A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/MapTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Map[K, G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/MapTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/MapTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/MapTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/MapTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/MapTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/MapTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/MapTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/MapTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/MapTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/MapTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/MapTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/MapTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/MapTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/MapTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/MapTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/MapTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/MapTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/MapTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/MapTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/MapTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/MapTraverse.html", "kind" : "trait"}, {"name" : "kits.std.OptionFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: Option[A])(f: (A) ⇒ B): Option[B]", "member" : "kits.std.OptionFunctor.map", "link" : "kits\/std\/OptionFunctor.html#map[A,B](fa:Option[A])(f:A=>B):Option[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Option[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/OptionFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/OptionFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/OptionFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/OptionFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/OptionFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/OptionFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/OptionFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/OptionFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/OptionFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/OptionFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/OptionFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/OptionFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/OptionFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/OptionFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/OptionFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/OptionFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/OptionFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/OptionFunctor.html", "kind" : "trait"}, {"name" : "kits.std.OptionMonadPlus", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: Option[Option[A]]): Option[A]", "member" : "kits.std.OptionMonadPlus.flatten", "link" : "kits\/std\/OptionMonadPlus.html#flatten[A](ffa:Option[Option[A]]):Option[A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: Option[A])(f: (A) ⇒ Option[B]): Option[B]", "member" : "kits.std.OptionMonadPlus.flatMap", "link" : "kits\/std\/OptionMonadPlus.html#flatMap[A,B](fa:Option[A])(f:A=>Option[B]):Option[B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fa: Option[A])(p: (A) ⇒ Boolean): Option[A]", "member" : "kits.std.OptionMonadPlus.filter", "link" : "kits\/std\/OptionMonadPlus.html#filter[A](fa:Option[A])(p:A=>Boolean):Option[A]", "kind" : "final def"}, {"label" : "plus", "tail" : "(x: Option[A], y: Option[A]): Option[A]", "member" : "kits.std.OptionMonadPlus.plus", "link" : "kits\/std\/OptionMonadPlus.html#plus[A](x:Option[A],y:Option[A]):Option[A]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Option[A]", "member" : "kits.std.OptionMonadPlus.pure", "link" : "kits\/std\/OptionMonadPlus.html#pure[A](a:A):Option[A]", "kind" : "final def"}, {"label" : "zero", "tail" : "(): Option[A]", "member" : "kits.std.OptionMonadPlus.zero", "link" : "kits\/std\/OptionMonadPlus.html#zero[A]:Option[A]", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[Option[A]]", "member" : "kits.MonadPlus.monoid", "link" : "kits\/std\/OptionMonadPlus.html#monoid[A]:kits.Monoid[F[A]]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: Option[A])(f: Option[(A) ⇒ B]): Option[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/OptionMonadPlus.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Option[A])(f: (A) ⇒ B): Option[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/OptionMonadPlus.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Option[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/OptionMonadPlus.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Option[A], fb: Option[B], fc: Option[C])(f: (A, B, C) ⇒ D): Option[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/OptionMonadPlus.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Option[A], fb: Option[B])(f: (A, B) ⇒ C): Option[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/OptionMonadPlus.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Option[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/OptionMonadPlus.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/OptionMonadPlus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/OptionMonadPlus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/OptionMonadPlus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/OptionMonadPlus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/OptionMonadPlus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/OptionMonadPlus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/OptionMonadPlus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionMonadPlus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionMonadPlus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionMonadPlus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/OptionMonadPlus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/OptionMonadPlus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/OptionMonadPlus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/OptionMonadPlus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/OptionMonadPlus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/OptionMonadPlus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/OptionMonadPlus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/OptionMonadPlus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/OptionMonadPlus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/OptionMonadPlus.html", "kind" : "trait"}, {"name" : "kits.std.OptionMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: Option[A], y: Option[A]): Option[A]", "member" : "kits.std.OptionMonoid.append", "link" : "kits\/std\/OptionMonoid.html#append(x:Option[A],y:Option[A]):Option[A]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Option[A]", "member" : "kits.std.OptionMonoid.empty", "link" : "kits\/std\/OptionMonoid.html#empty:Option[A]", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]Option[A]]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/OptionMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/OptionMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/OptionMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/OptionMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/OptionMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/OptionMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/OptionMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/OptionMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/OptionMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/OptionMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/OptionMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/OptionMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/OptionMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/OptionMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/OptionMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/OptionMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/OptionMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[A]", "member" : "kits.std.OptionMonoid.monoid", "link" : "kits\/std\/OptionMonoid.html#monoid:kits.Monoid[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/OptionMonoid.html", "kind" : "trait"}, {"name" : "kits.std.OptionTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Option[A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[Option[B]]", "member" : "kits.std.OptionTraverse.traverse", "link" : "kits\/std\/OptionTraverse.html#traverse[F[_],A,B](fa:Option[A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[Option[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Option[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/OptionTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Option[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/OptionTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Option[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/OptionTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Option[G[A]])(arg0: Applicative[G]): G[Option[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/OptionTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Option[A])(f: (A) ⇒ B): Option[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/OptionTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Option[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/OptionTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/OptionTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/OptionTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/OptionTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/OptionTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/OptionTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/OptionTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/OptionTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OptionTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/OptionTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/OptionTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/OptionTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/OptionTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/OptionTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/OptionTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/OptionTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/OptionTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/OptionTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/OptionTraverse.html", "kind" : "trait"}, {"name" : "kits.std.OrderingMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: Ordering[A], y: Ordering[A]): Ordering[A]", "member" : "kits.std.OrderingMonoid.append", "link" : "kits\/std\/OrderingMonoid.html#append(x:Ordering[A],y:Ordering[A]):Ordering[A]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Ordering[A]", "member" : "kits.std.OrderingMonoid.empty", "link" : "kits\/std\/OrderingMonoid.html#empty:Ordering[A]", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]Ordering[A]]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/OrderingMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/OrderingMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/OrderingMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/OrderingMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/OrderingMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/OrderingMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/OrderingMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/OrderingMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OrderingMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OrderingMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/OrderingMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/OrderingMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/OrderingMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/OrderingMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/OrderingMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/OrderingMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/OrderingMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/OrderingMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/OrderingMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/OrderingMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/OrderingMonoid.html", "kind" : "trait"}, {"name" : "kits.std.ProdMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: A, y: A): A", "member" : "kits.std.ProdMonoid.append", "link" : "kits\/std\/ProdMonoid.html#append(x:A,y:A):A", "kind" : "final def"}, {"label" : "empty", "tail" : "(): A", "member" : "kits.std.ProdMonoid.empty", "link" : "kits\/std\/ProdMonoid.html#empty:A", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]A]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/ProdMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/ProdMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/ProdMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/ProdMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/ProdMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/ProdMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/ProdMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/ProdMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ProdMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ProdMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/ProdMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/ProdMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/ProdMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/ProdMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/ProdMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/ProdMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/ProdMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/ProdMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/ProdMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/ProdMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "numeric", "tail" : "(): Numeric[A]", "member" : "kits.std.ProdMonoid.numeric", "link" : "kits\/std\/ProdMonoid.html#numeric:Numeric[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/ProdMonoid.html", "kind" : "trait"}, {"name" : "kits.std.SetFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: Set[A])(f: (A) ⇒ B): Set[B]", "member" : "kits.std.SetFunctor.map", "link" : "kits\/std\/SetFunctor.html#map[A,B](fa:Set[A])(f:A=>B):Set[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Set[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/SetFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/SetFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/SetFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/SetFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/SetFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/SetFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/SetFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/SetFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/SetFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/SetFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/SetFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/SetFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/SetFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/SetFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/SetFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/SetFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/SetFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/SetFunctor.html", "kind" : "trait"}, {"name" : "kits.std.SetMonadPlus", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: Set[Set[A]]): Set[A]", "member" : "kits.std.SetMonadPlus.flatten", "link" : "kits\/std\/SetMonadPlus.html#flatten[A](ffa:Set[Set[A]]):Set[A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: Set[A])(f: (A) ⇒ Set[B]): Set[B]", "member" : "kits.std.SetMonadPlus.flatMap", "link" : "kits\/std\/SetMonadPlus.html#flatMap[A,B](fa:Set[A])(f:A=>Set[B]):Set[B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fa: Set[A])(p: (A) ⇒ Boolean): Set[A]", "member" : "kits.std.SetMonadPlus.filter", "link" : "kits\/std\/SetMonadPlus.html#filter[A](fa:Set[A])(p:A=>Boolean):Set[A]", "kind" : "final def"}, {"label" : "plus", "tail" : "(x: Set[A], y: Set[A]): Set[A]", "member" : "kits.std.SetMonadPlus.plus", "link" : "kits\/std\/SetMonadPlus.html#plus[A](x:Set[A],y:Set[A]):Set[A]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Set[A]", "member" : "kits.std.SetMonadPlus.pure", "link" : "kits\/std\/SetMonadPlus.html#pure[A](a:A):Set[A]", "kind" : "final def"}, {"label" : "zero", "tail" : "(): Set[A]", "member" : "kits.std.SetMonadPlus.zero", "link" : "kits\/std\/SetMonadPlus.html#zero[A]:Set[A]", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[Set[A]]", "member" : "kits.MonadPlus.monoid", "link" : "kits\/std\/SetMonadPlus.html#monoid[A]:kits.Monoid[F[A]]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: Set[A])(f: Set[(A) ⇒ B]): Set[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/SetMonadPlus.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Set[A])(f: (A) ⇒ B): Set[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/SetMonadPlus.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Set[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/SetMonadPlus.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Set[A], fb: Set[B], fc: Set[C])(f: (A, B, C) ⇒ D): Set[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/SetMonadPlus.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Set[A], fb: Set[B])(f: (A, B) ⇒ C): Set[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/SetMonadPlus.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Set[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/SetMonadPlus.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/SetMonadPlus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/SetMonadPlus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/SetMonadPlus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/SetMonadPlus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/SetMonadPlus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/SetMonadPlus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/SetMonadPlus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetMonadPlus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetMonadPlus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetMonadPlus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/SetMonadPlus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/SetMonadPlus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/SetMonadPlus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/SetMonadPlus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/SetMonadPlus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/SetMonadPlus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/SetMonadPlus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/SetMonadPlus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/SetMonadPlus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/SetMonadPlus.html", "kind" : "trait"}, {"name" : "kits.std.SetTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Set[A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[Set[B]]", "member" : "kits.std.SetTraverse.traverse", "link" : "kits\/std\/SetTraverse.html#traverse[F[_],A,B](fa:Set[A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[Set[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Set[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/SetTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Set[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/SetTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Set[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/SetTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Set[G[A]])(arg0: Applicative[G]): G[Set[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/SetTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Set[A])(f: (A) ⇒ B): Set[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/SetTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Set[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/SetTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/SetTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/SetTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/SetTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/SetTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/SetTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/SetTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/SetTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SetTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/SetTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/SetTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/SetTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/SetTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/SetTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/SetTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/SetTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/SetTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/SetTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/SetTraverse.html", "kind" : "trait"}, {"name" : "kits.std.StreamFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: Stream[A])(f: (A) ⇒ B): Stream[B]", "member" : "kits.std.StreamFunctor.map", "link" : "kits\/std\/StreamFunctor.html#map[A,B](fa:Stream[A])(f:A=>B):Stream[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Stream[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/StreamFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/StreamFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/StreamFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/StreamFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/StreamFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/StreamFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/StreamFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/StreamFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/StreamFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/StreamFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/StreamFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/StreamFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/StreamFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/StreamFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/StreamFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/StreamFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/StreamFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/StreamFunctor.html", "kind" : "trait"}, {"name" : "kits.std.StreamMonadPlus", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: Stream[Stream[A]]): Stream[A]", "member" : "kits.std.StreamMonadPlus.flatten", "link" : "kits\/std\/StreamMonadPlus.html#flatten[A](ffa:Stream[Stream[A]]):Stream[A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: Stream[A])(f: (A) ⇒ Stream[B]): Stream[B]", "member" : "kits.std.StreamMonadPlus.flatMap", "link" : "kits\/std\/StreamMonadPlus.html#flatMap[A,B](fa:Stream[A])(f:A=>Stream[B]):Stream[B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fa: Stream[A])(p: (A) ⇒ Boolean): Stream[A]", "member" : "kits.std.StreamMonadPlus.filter", "link" : "kits\/std\/StreamMonadPlus.html#filter[A](fa:Stream[A])(p:A=>Boolean):Stream[A]", "kind" : "final def"}, {"label" : "plus", "tail" : "(x: Stream[A], y: Stream[A]): Stream[A]", "member" : "kits.std.StreamMonadPlus.plus", "link" : "kits\/std\/StreamMonadPlus.html#plus[A](x:Stream[A],y:Stream[A]):Stream[A]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Stream[A]", "member" : "kits.std.StreamMonadPlus.pure", "link" : "kits\/std\/StreamMonadPlus.html#pure[A](a:A):Stream[A]", "kind" : "final def"}, {"label" : "zero", "tail" : "(): Stream[A]", "member" : "kits.std.StreamMonadPlus.zero", "link" : "kits\/std\/StreamMonadPlus.html#zero[A]:Stream[A]", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[Stream[A]]", "member" : "kits.MonadPlus.monoid", "link" : "kits\/std\/StreamMonadPlus.html#monoid[A]:kits.Monoid[F[A]]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: Stream[A])(f: Stream[(A) ⇒ B]): Stream[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/StreamMonadPlus.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Stream[A])(f: (A) ⇒ B): Stream[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/StreamMonadPlus.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Stream[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/StreamMonadPlus.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Stream[A], fb: Stream[B], fc: Stream[C])(f: (A, B, C) ⇒ D): Stream[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/StreamMonadPlus.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Stream[A], fb: Stream[B])(f: (A, B) ⇒ C): Stream[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/StreamMonadPlus.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Stream[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/StreamMonadPlus.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/StreamMonadPlus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/StreamMonadPlus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/StreamMonadPlus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/StreamMonadPlus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/StreamMonadPlus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/StreamMonadPlus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/StreamMonadPlus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamMonadPlus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamMonadPlus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamMonadPlus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/StreamMonadPlus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/StreamMonadPlus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/StreamMonadPlus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/StreamMonadPlus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/StreamMonadPlus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/StreamMonadPlus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/StreamMonadPlus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/StreamMonadPlus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/StreamMonadPlus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/StreamMonadPlus.html", "kind" : "trait"}, {"name" : "kits.std.StreamTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Stream[A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[Stream[B]]", "member" : "kits.std.StreamTraverse.traverse", "link" : "kits\/std\/StreamTraverse.html#traverse[F[_],A,B](fa:Stream[A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[Stream[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Stream[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/StreamTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Stream[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/StreamTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Stream[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/StreamTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Stream[G[A]])(arg0: Applicative[G]): G[Stream[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/StreamTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Stream[A])(f: (A) ⇒ B): Stream[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/StreamTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Stream[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/StreamTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/StreamTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/StreamTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/StreamTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/StreamTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/StreamTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/StreamTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/StreamTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StreamTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/StreamTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/StreamTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/StreamTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/StreamTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/StreamTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/StreamTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/StreamTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/StreamTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/StreamTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/StreamTraverse.html", "kind" : "trait"}, {"name" : "kits.std.StringMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: String, y: String): String", "member" : "kits.std.StringMonoid.append", "link" : "kits\/std\/StringMonoid.html#append(x:String,y:String):String", "kind" : "final def"}, {"label" : "empty", "tail" : "(): String", "member" : "kits.std.StringMonoid.empty", "link" : "kits\/std\/StringMonoid.html#empty:String", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]String]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/StringMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/StringMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/StringMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/StringMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/StringMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/StringMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/StringMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/StringMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StringMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StringMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/StringMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/StringMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/StringMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/StringMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/StringMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/StringMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/StringMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/StringMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/StringMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/StringMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/StringMonoid.html", "kind" : "trait"}, {"name" : "kits.std.SumMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: A, y: A): A", "member" : "kits.std.SumMonoid.append", "link" : "kits\/std\/SumMonoid.html#append(x:A,y:A):A", "kind" : "final def"}, {"label" : "empty", "tail" : "(): A", "member" : "kits.std.SumMonoid.empty", "link" : "kits\/std\/SumMonoid.html#empty:A", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]A]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/SumMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/SumMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/SumMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/SumMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/SumMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/SumMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/SumMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/SumMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SumMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SumMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/SumMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/SumMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/SumMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/SumMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/SumMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/SumMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/SumMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/SumMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/SumMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/SumMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "numeric", "tail" : "(): Numeric[A]", "member" : "kits.std.SumMonoid.numeric", "link" : "kits\/std\/SumMonoid.html#numeric:Numeric[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/SumMonoid.html", "kind" : "trait"}, {"name" : "kits.std.TailRecMonad", "members_trait" : [{"label" : "flatMap", "tail" : "(fa: TailRec[A])(f: (A) ⇒ TailRec[B]): TailRec[B]", "member" : "kits.std.TailRecMonad.flatMap", "link" : "kits\/std\/TailRecMonad.html#flatMap[A,B](fa:util.control.TailCalls.TailRec[A])(f:A=>util.control.TailCalls.TailRec[B]):util.control.TailCalls.TailRec[B]", "kind" : "final def"}, {"label" : "map", "tail" : "(fa: TailRec[A])(f: (A) ⇒ B): TailRec[B]", "member" : "kits.std.TailRecMonad.map", "link" : "kits\/std\/TailRecMonad.html#map[A,B](fa:util.control.TailCalls.TailRec[A])(f:A=>B):util.control.TailCalls.TailRec[B]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): TailRec[A]", "member" : "kits.std.TailRecMonad.pure", "link" : "kits\/std\/TailRecMonad.html#pure[A](a:A):util.control.TailCalls.TailRec[A]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ffa: TailRec[TailRec[A]]): TailRec[A]", "member" : "kits.Monad.flatten", "link" : "kits\/std\/TailRecMonad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: TailRec[A])(f: TailRec[(A) ⇒ B]): TailRec[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/TailRecMonad.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]TailRec[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/TailRecMonad.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: TailRec[A], fb: TailRec[B], fc: TailRec[C])(f: (A, B, C) ⇒ D): TailRec[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/TailRecMonad.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: TailRec[A], fb: TailRec[B])(f: (A, B) ⇒ C): TailRec[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/TailRecMonad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]TailRec[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/TailRecMonad.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/TailRecMonad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/TailRecMonad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/TailRecMonad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/TailRecMonad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/TailRecMonad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/TailRecMonad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/TailRecMonad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TailRecMonad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TailRecMonad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TailRecMonad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/TailRecMonad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/TailRecMonad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/TailRecMonad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/TailRecMonad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/TailRecMonad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/TailRecMonad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/TailRecMonad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/TailRecMonad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/TailRecMonad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/TailRecMonad.html", "kind" : "trait"}, {"name" : "kits.std.TryFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: Try[A])(f: (A) ⇒ B): Try[B]", "member" : "kits.std.TryFunctor.map", "link" : "kits\/std\/TryFunctor.html#map[A,B](fa:scala.util.Try[A])(f:A=>B):scala.util.Try[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Try[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/TryFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/TryFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/TryFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/TryFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/TryFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/TryFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/TryFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/TryFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/TryFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/TryFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/TryFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/TryFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/TryFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/TryFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/TryFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/TryFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/TryFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/TryFunctor.html", "kind" : "trait"}, {"name" : "kits.std.TryMonad", "members_trait" : [{"label" : "flatMap", "tail" : "(fa: Try[A])(f: (A) ⇒ Try[B]): Try[B]", "member" : "kits.std.TryMonad.flatMap", "link" : "kits\/std\/TryMonad.html#flatMap[A,B](fa:scala.util.Try[A])(f:A=>scala.util.Try[B]):scala.util.Try[B]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Try[A]", "member" : "kits.std.TryMonad.pure", "link" : "kits\/std\/TryMonad.html#pure[A](a:A):scala.util.Try[A]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ffa: Try[Try[A]]): Try[A]", "member" : "kits.Monad.flatten", "link" : "kits\/std\/TryMonad.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: Try[A])(f: Try[(A) ⇒ B]): Try[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/TryMonad.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Try[A])(f: (A) ⇒ B): Try[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/TryMonad.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Try[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/TryMonad.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Try[A], fb: Try[B], fc: Try[C])(f: (A, B, C) ⇒ D): Try[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/TryMonad.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Try[A], fb: Try[B])(f: (A, B) ⇒ C): Try[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/TryMonad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Try[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/TryMonad.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/TryMonad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/TryMonad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/TryMonad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/TryMonad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/TryMonad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/TryMonad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/TryMonad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryMonad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryMonad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryMonad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/TryMonad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/TryMonad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/TryMonad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/TryMonad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/TryMonad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/TryMonad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/TryMonad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/TryMonad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/TryMonad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/TryMonad.html", "kind" : "trait"}, {"name" : "kits.std.TryTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Try[A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[Try[B]]", "member" : "kits.std.TryTraverse.traverse", "link" : "kits\/std\/TryTraverse.html#traverse[F[_],A,B](fa:scala.util.Try[A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[scala.util.Try[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Try[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/TryTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Try[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/TryTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Try[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/TryTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Try[G[A]])(arg0: Applicative[G]): G[Try[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/TryTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Try[A])(f: (A) ⇒ B): Try[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/TryTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Try[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/TryTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/TryTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/TryTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/TryTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/TryTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/TryTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/TryTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/TryTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/TryTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/TryTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/TryTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/TryTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/TryTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/TryTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/TryTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/TryTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/TryTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/TryTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/TryTraverse.html", "kind" : "trait"}, {"name" : "kits.std.Tuple2Monoid", "members_trait" : [{"label" : "append", "tail" : "(x: (A, B), y: (A, B)): (A, B)", "member" : "kits.std.Tuple2Monoid.append", "link" : "kits\/std\/Tuple2Monoid.html#append(x:(A,B),y:(A,B)):(A,B)", "kind" : "final def"}, {"label" : "empty", "tail" : "(): (A, B)", "member" : "kits.std.Tuple2Monoid.empty", "link" : "kits\/std\/Tuple2Monoid.html#empty:(A,B)", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B](A, B)]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/Tuple2Monoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/Tuple2Monoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/Tuple2Monoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/Tuple2Monoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/Tuple2Monoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/Tuple2Monoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/Tuple2Monoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/Tuple2Monoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Tuple2Monoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Tuple2Monoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Tuple2Monoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/Tuple2Monoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/Tuple2Monoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/Tuple2Monoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/Tuple2Monoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/Tuple2Monoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/Tuple2Monoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/Tuple2Monoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/Tuple2Monoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/Tuple2Monoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "_2", "tail" : "(): Monoid[B]", "member" : "kits.std.Tuple2Monoid._2", "link" : "kits\/std\/Tuple2Monoid.html#_2:kits.Monoid[B]", "kind" : "abstract def"}, {"label" : "_1", "tail" : "(): Monoid[A]", "member" : "kits.std.Tuple2Monoid._1", "link" : "kits\/std\/Tuple2Monoid.html#_1:kits.Monoid[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/Tuple2Monoid.html", "kind" : "trait"}, {"name" : "kits.std.Tuple3Monoid", "members_trait" : [{"label" : "append", "tail" : "(x: (A, B, C), y: (A, B, C)): (A, B, C)", "member" : "kits.std.Tuple3Monoid.append", "link" : "kits\/std\/Tuple3Monoid.html#append(x:(A,B,C),y:(A,B,C)):(A,B,C)", "kind" : "final def"}, {"label" : "empty", "tail" : "(): (A, B, C)", "member" : "kits.std.Tuple3Monoid.empty", "link" : "kits\/std\/Tuple3Monoid.html#empty:(A,B,C)", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B](A, B, C)]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/Tuple3Monoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/Tuple3Monoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/Tuple3Monoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/Tuple3Monoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/Tuple3Monoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/Tuple3Monoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/Tuple3Monoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/Tuple3Monoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Tuple3Monoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Tuple3Monoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/Tuple3Monoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/Tuple3Monoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/Tuple3Monoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/Tuple3Monoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/Tuple3Monoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/Tuple3Monoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/Tuple3Monoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/Tuple3Monoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/Tuple3Monoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/Tuple3Monoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "_3", "tail" : "(): Monoid[C]", "member" : "kits.std.Tuple3Monoid._3", "link" : "kits\/std\/Tuple3Monoid.html#_3:kits.Monoid[C]", "kind" : "abstract def"}, {"label" : "_2", "tail" : "(): Monoid[B]", "member" : "kits.std.Tuple3Monoid._2", "link" : "kits\/std\/Tuple3Monoid.html#_2:kits.Monoid[B]", "kind" : "abstract def"}, {"label" : "_1", "tail" : "(): Monoid[A]", "member" : "kits.std.Tuple3Monoid._1", "link" : "kits\/std\/Tuple3Monoid.html#_1:kits.Monoid[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "kits\/std\/Tuple3Monoid.html", "kind" : "trait"}, {"name" : "kits.std.UnitMonoid", "members_trait" : [{"label" : "append", "tail" : "(x: Unit, y: Unit): Unit", "member" : "kits.std.UnitMonoid.append", "link" : "kits\/std\/UnitMonoid.html#append(x:Unit,y:Unit):Unit", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Unit", "member" : "kits.std.UnitMonoid.empty", "link" : "kits\/std\/UnitMonoid.html#empty:Unit", "kind" : "final def"}, {"label" : "applicative", "tail" : "(): Applicative[[B]Unit]", "member" : "kits.Monoid.applicative", "link" : "kits\/std\/UnitMonoid.html#applicative:kits.Applicative[[B]A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/UnitMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/UnitMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/UnitMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/UnitMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/UnitMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/UnitMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/UnitMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/UnitMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/UnitMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/UnitMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/UnitMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/UnitMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/UnitMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/UnitMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/UnitMonoid.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/UnitMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/UnitMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/UnitMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/UnitMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/UnitMonoid.html", "kind" : "trait"}, {"name" : "kits.std.VectorFunctor", "members_trait" : [{"label" : "map", "tail" : "(fa: Vector[A])(f: (A) ⇒ B): Vector[B]", "member" : "kits.std.VectorFunctor.map", "link" : "kits\/std\/VectorFunctor.html#map[A,B](fa:Vector[A])(f:A=>B):Vector[B]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Vector[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/VectorFunctor.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/VectorFunctor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/VectorFunctor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/VectorFunctor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/VectorFunctor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/VectorFunctor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/VectorFunctor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/VectorFunctor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorFunctor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorFunctor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorFunctor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/VectorFunctor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/VectorFunctor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/VectorFunctor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/VectorFunctor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/VectorFunctor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/VectorFunctor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/VectorFunctor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/VectorFunctor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/VectorFunctor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/VectorFunctor.html", "kind" : "trait"}, {"name" : "kits.std.VectorMonadPlus", "members_trait" : [{"label" : "flatten", "tail" : "(ffa: Vector[Vector[A]]): Vector[A]", "member" : "kits.std.VectorMonadPlus.flatten", "link" : "kits\/std\/VectorMonadPlus.html#flatten[A](ffa:Vector[Vector[A]]):Vector[A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(fa: Vector[A])(f: (A) ⇒ Vector[B]): Vector[B]", "member" : "kits.std.VectorMonadPlus.flatMap", "link" : "kits\/std\/VectorMonadPlus.html#flatMap[A,B](fa:Vector[A])(f:A=>Vector[B]):Vector[B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fa: Vector[A])(p: (A) ⇒ Boolean): Vector[A]", "member" : "kits.std.VectorMonadPlus.filter", "link" : "kits\/std\/VectorMonadPlus.html#filter[A](fa:Vector[A])(p:A=>Boolean):Vector[A]", "kind" : "final def"}, {"label" : "plus", "tail" : "(x: Vector[A], y: Vector[A]): Vector[A]", "member" : "kits.std.VectorMonadPlus.plus", "link" : "kits\/std\/VectorMonadPlus.html#plus[A](x:Vector[A],y:Vector[A]):Vector[A]", "kind" : "final def"}, {"label" : "pure", "tail" : "(a: A): Vector[A]", "member" : "kits.std.VectorMonadPlus.pure", "link" : "kits\/std\/VectorMonadPlus.html#pure[A](a:A):Vector[A]", "kind" : "final def"}, {"label" : "zero", "tail" : "(): Vector[A]", "member" : "kits.std.VectorMonadPlus.zero", "link" : "kits\/std\/VectorMonadPlus.html#zero[A]:Vector[A]", "kind" : "final def"}, {"label" : "monoid", "tail" : "(): Monoid[Vector[A]]", "member" : "kits.MonadPlus.monoid", "link" : "kits\/std\/VectorMonadPlus.html#monoid[A]:kits.Monoid[F[A]]", "kind" : "def"}, {"label" : "ap", "tail" : "(fa: Vector[A])(f: Vector[(A) ⇒ B]): Vector[B]", "member" : "kits.Monad.ap", "link" : "kits\/std\/VectorMonadPlus.html#ap[A,B](fa:F[A])(f:F[A=>B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Vector[A])(f: (A) ⇒ B): Vector[B]", "member" : "kits.Monad.map", "link" : "kits\/std\/VectorMonadPlus.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[A]Vector[G[A]]]", "member" : "kits.Applicative.compose", "link" : "kits\/std\/VectorMonadPlus.html#compose[G[_]](implicitG:kits.Applicative[G]):kits.Applicative[[A]F[G[A]]]", "kind" : "def"}, {"label" : "map3", "tail" : "(fa: Vector[A], fb: Vector[B], fc: Vector[C])(f: (A, B, C) ⇒ D): Vector[D]", "member" : "kits.Applicative.map3", "link" : "kits\/std\/VectorMonadPlus.html#map3[A,B,C,D](fa:F[A],fb:F[B],fc:F[C])(f:(A,B,C)=>D):F[D]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Vector[A], fb: Vector[B])(f: (A, B) ⇒ C): Vector[C]", "member" : "kits.Applicative.map2", "link" : "kits\/std\/VectorMonadPlus.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Vector[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/VectorMonadPlus.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/VectorMonadPlus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/VectorMonadPlus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/VectorMonadPlus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/VectorMonadPlus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/VectorMonadPlus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/VectorMonadPlus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/VectorMonadPlus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorMonadPlus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorMonadPlus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorMonadPlus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/VectorMonadPlus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/VectorMonadPlus.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/VectorMonadPlus.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/VectorMonadPlus.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/VectorMonadPlus.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/VectorMonadPlus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/VectorMonadPlus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/VectorMonadPlus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/VectorMonadPlus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/VectorMonadPlus.html", "kind" : "trait"}, {"name" : "kits.std.VectorTraverse", "members_trait" : [{"label" : "traverse", "tail" : "(fa: Vector[A])(f: (A) ⇒ F[B])(F: Applicative[F]): F[Vector[B]]", "member" : "kits.std.VectorTraverse.traverse", "link" : "kits\/std\/VectorTraverse.html#traverse[F[_],A,B](fa:Vector[A])(f:A=>F[B])(implicitF:kits.Applicative[F]):F[Vector[B]]", "kind" : "final def"}, {"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[A]Vector[G[A]]]", "member" : "kits.Traverse.compose", "link" : "kits\/std\/VectorTraverse.html#compose[G[_]](implicitG:kits.Traverse[G]):kits.Traverse[[A]F[G[A]]]", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: Vector[A])(arg0: Monoid[A]): A", "member" : "kits.Traverse.fold", "link" : "kits\/std\/VectorTraverse.html#fold[A](fa:F[A])(implicitevidence$3:kits.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(fa: Vector[A])(f: (A) ⇒ B)(B: Monoid[B]): B", "member" : "kits.Traverse.foldMap", "link" : "kits\/std\/VectorTraverse.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:kits.Monoid[B]):B", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: Vector[G[A]])(arg0: Applicative[G]): G[Vector[A]]", "member" : "kits.Traverse.sequence", "link" : "kits\/std\/VectorTraverse.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$2:kits.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Vector[A])(f: (A) ⇒ B): Vector[B]", "member" : "kits.Traverse.map", "link" : "kits\/std\/VectorTraverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Functor[G]): Functor[[A]Vector[G[A]]]", "member" : "kits.Functor.compose", "link" : "kits\/std\/VectorTraverse.html#compose[G[_]](implicitG:kits.Functor[G]):kits.Functor[[A]F[G[A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kits\/std\/VectorTraverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kits\/std\/VectorTraverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kits\/std\/VectorTraverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kits\/std\/VectorTraverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kits\/std\/VectorTraverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kits\/std\/VectorTraverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kits\/std\/VectorTraverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorTraverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorTraverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kits\/std\/VectorTraverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kits\/std\/VectorTraverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kits\/std\/VectorTraverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kits\/std\/VectorTraverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kits\/std\/VectorTraverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kits\/std\/VectorTraverse.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kits\/std\/VectorTraverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kits\/std\/VectorTraverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kits\/std\/VectorTraverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kits\/std\/VectorTraverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "kits\/std\/VectorTraverse.html", "kind" : "trait"}]};